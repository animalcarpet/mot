<?php

use DvsaMotTest\Model\BrakeTestConfigurationClass1And2Helper;

/**
 * @var BrakeTestConfigurationClass1And2Helper $configHelper
 * @var \DvsaCommon\Dto\Common\MotTestDto      $motTest
 * @var array                                  $brakeTestTypes
 */

$title = 'Brake test configuration';
$vehicle = $motTest->getVehicle();
$this->headTitle($title);
$this->layout()->setVariable('pageSubTitle', 'MOT testing');
$this->layout()->setVariable('pageTitle', "Brake test configuration");

$brakeTestResult = $motTest->getBrakeTestResult();

$this->placeholder('progressBar')->captureStart();
echo $this->partial(
    'motTestProgress',
    ['currentStep' => 2, 'isMotContingency' => $this->isMotContingency]
);
$this->placeholder('progressBar')->captureEnd();
?>

<?php echo $this->partial('errorMessages', ['getFromFlash' => true]); ?>
<?php echo $this->partial('infoMessages', ['getFromFlash' => true]); ?>

<?php echo $this->partial('vehicleSummary', ['vehicle' => $vehicle]); ?>

<form method="POST" role="form">
    <?php echo $this->csrfToken() ?>
    <div class="row">
        <div class="col-sm-8">
            <fieldset>
                <?php echo $this->partial(
                    'partial/forms/selectBox.phtml',
                    [
                        'id'       => 'brakeTestType',
                        'label'    => 'Brake test type',
                        'options'  => $brakeTestTypes,
                        'value'    => $configHelper->getBrakeTestType(),
                        'required' => true,
                    ]
                ); ?>

                <div class="form-group" id="weights">

                    <label for="vehicleWeight">Machine weight front in kilograms</label>
                    <?php echo $this->partial(
                        'inputElement',
                        [
                            'id'       => 'vehicleWeightFront',
                            'name'     => 'vehicleWeightFront',
                            'value'    => $configHelper->getVehicleWeightFront(),
                        ]
                    ); ?>

                    <label for="vehicleWeight">Machine weight rear in kilograms</label>
                    <?php echo $this->partial(
                        'inputElement',
                        [
                            'id'       => 'vehicleWeightRear',
                            'name'     => 'vehicleWeightRear',
                            'value'    => $configHelper->getVehicleWeightRear(),
                        ]
                    ); ?>

                    <label for="vehicleWeight">Rider weight in kilograms <small>(optional)</small></label>
                    <?php echo $this->partial(
                        'inputElement',
                        [
                            'id'       => 'riderWeight',
                            'name'     => 'riderWeight',
                            'value'    => $configHelper->getRiderWeight(),
                        ]
                    ); ?>

                    <div class="form-group">
                        <fieldset>
                            <div class="form-group form-group-related">
                                <legend class="form-label">Is there a sidecar attached?</legend>
                                <?php echo $this->partial(
                                    'partial/forms/radioElement.phtml',
                                    [
                                        'id'        => 'isSidecarAttachedNo',
                                        'name'      => 'isSidecarAttached',
                                        'value'     => '0',
                                        'isChecked' => !($configHelper->isSidecarAttached()),
                                        'label'     => 'No',
                                    ]
                                );

                                echo $this->partial(
                                    'partial/forms/radioElement.phtml',
                                    [
                                        'id'        => 'isSidecarAttachedYes',
                                        'name'      => 'isSidecarAttached',
                                        'value'     => '1',
                                        'isChecked' => $configHelper->isSidecarAttached(),
                                        'label'     => 'Yes',
                                    ]
                                );
                                ?>
                            </div>

                            <div class="panel-indent" id="sidecarWeightGroup">
                                <label for="vehicleWeight">Sidecar weight in kilograms</label>
                                <?php echo $this->partial(
                                    'inputElement',
                                    [
                                        'id'       => 'sidecarWeight',
                                        'name'     => 'sidecarWeight',
                                        'value'    => $configHelper->getSidecarWeight(),
                                    ]
                                ); ?>
                            </div>
                        </fieldset>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12 btn-bar">
            <input type="submit" id="brake_test_results_submit" name="submit" value="Next" class="btn btn-primary"/>
            <a id="brake_test_results_cancel" href="<?php echo $this->url('mot-test', ['motTestNumber' => $motTest->getMotTestNumber()]); ?>" class="btn btn-link">Cancel</a>
        </div>
    </div>
</form>
<script type="text/javascript">
    function isSidecarAttached() {
        return ($('[name=isSidecarAttached]:checked').val() === '1');
    }

    function isWeightRequiredForBrakeTestType() {
        var brakeTestType = $('#brakeTestType').val();

        return (brakeTestType === 'ROLLR' || brakeTestType === 'PLATE' || brakeTestType === 'FLOOR');
    }

    function updateSidecarWeightVisibility() {
        $('#sidecarWeightGroup').toggle((isSidecarAttached()));
    }

    function updateSidecarWeightIsDisabled() {
        var isDisabled = !(isSidecarAttached() && isWeightRequiredForBrakeTestType());
        $('#sidecarWeight').prop('disabled', isDisabled);
    }

    function updateWeightsSection() {
        var visible = isWeightRequiredForBrakeTestType();

        $('#weights').toggle(visible)
            .find('#vehicleWeightFront, #vehicleWeightRear, #riderWeight').prop('disabled', !visible);
    }

    $(document).ready(function () {

        $('[name=isSidecarAttached]').change(function () {
            updateSidecarWeightVisibility();
            updateSidecarWeightIsDisabled();
        });

        $('#brakeTestType').change(function () {
            updateWeightsSection();
            updateSidecarWeightIsDisabled();
        });

        updateWeightsSection();
        updateSidecarWeightVisibility();
        updateSidecarWeightIsDisabled();
    });
</script>
