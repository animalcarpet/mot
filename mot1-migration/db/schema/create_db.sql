CREATE DATABASE IF NOT EXISTS MOT1 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT COLLATE utf8_general_ci;

USE MOT1;

CREATE TABLE ACCESSLOG
(   ACCESSLOGID INTEGER
  , PERSONID INTEGER
  , LOCATIONID INTEGER
  , LOCATIONTYPE CHARACTER (1)
  , LOCATIONNUMBER CHARACTER (10)
  , VTSDEVICEIPADDR4 SMALLINT
  , ACCLOGTIME TIMESTAMP(3)
  , FALLBACKPERSONID INTEGER
  , MESSAGECODE SMALLINT
  , FUNCTIONCODE CHARACTER (5)
  , SMARTCARDHWSRLNO DECIMAL (10,0)
  , ORGID INTEGER
  , ACELOGERRMSGTXT CHARACTER (100)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_ACCESSLOG PRIMARY KEY (
       ACCESSLOGID
    )
);

CREATE TABLE AEEVENT
(   ORGID INTEGER
  , AEEVENTCNTR INTEGER
  , EVENTTYPECODE CHARACTER (6)
  , OUTCOMETYPECODE CHARACTER (6)
  , AEEVENTCREATPERSID INTEGER
  , AEEVENTDATE DATE
  , AEEVENTDESCRIPTION CHARACTER (100)
  , LOCATIONID INTEGER
  , ORIGINATINGPERSID INTEGER
  , COSTCENTREID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_AEEVENT PRIMARY KEY (
       ORGID
     , AEEVENTCNTR
    )
);

CREATE TABLE AEEVENTTYPE
(   EVENTTYPECODE CHARACTER (6)
  , EVENTTYPEORDER INTEGER
  , AEEVENTTYPEDES CHARACTER (100)
  , EVENTTYPEVTSUSE CHARACTER (1)
  , AEEVENTTYPEFRDT DATE
  , AEEVENTTYPETODT DATE
  , OUTCOMETYPECODE01 CHARACTER (6)
  , OUTCOMETYPECODE02 CHARACTER (6)
  , OUTCOMETYPECODE03 CHARACTER (6)
  , OUTCOMETYPECODE04 CHARACTER (6)
  , OUTCOMETYPECODE05 CHARACTER (6)
  , OUTCOMETYPECODE06 CHARACTER (6)
  , OUTCOMETYPECODE07 CHARACTER (6)
  , OUTCOMETYPECODE08 CHARACTER (6)
  , OUTCOMETYPECODE09 CHARACTER (6)
  , OUTCOMETYPECODE10 CHARACTER (6)
  , OUTCOMETYPECODE11 CHARACTER (6)
  , OUTCOMETYPECODE12 CHARACTER (6)
  , OUTCOMETYPECODE13 CHARACTER (6)
  , OUTCOMETYPECODE14 CHARACTER (6)
  , OUTCOMETYPECODE15 CHARACTER (6)
  , OUTCOMETYPECODE16 CHARACTER (6)
  , OUTCOMETYPECODE17 CHARACTER (6)
  , OUTCOMETYPECODE18 CHARACTER (6)
  , OUTCOMETYPECODE19 CHARACTER (6)
  , OUTCOMETYPECODE20 CHARACTER (6)
  , OUTCOMETYPECODE21 CHARACTER (6)
  , OUTCOMETYPECODE22 CHARACTER (6)
  , OUTCOMETYPECODE23 CHARACTER (6)
  , OUTCOMETYPECODE24 CHARACTER (6)
  , OUTCOMETYPECODE25 CHARACTER (6)
  , OUTCOMETYPECODE26 CHARACTER (6)
  , OUTCOMETYPECODE27 CHARACTER (6)
  , OUTCOMETYPECODE28 CHARACTER (6)
  , OUTCOMETYPECODE29 CHARACTER (6)
  , OUTCOMETYPECODE30 CHARACTER (6)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_EVENTTYPECODE PRIMARY KEY (
       EVENTTYPECODE
    )
);

CREATE TABLE AEOUTCOMETYPE
(   OUTCOMETYPECODE CHARACTER (6)
  , OUTCOMETYPEDES CHARACTER (100)
  , AEEVOUTCMDISCFLAG CHARACTER (1)
  , AEEVOUTCMINACTV CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_OUTCOMETYPECODE PRIMARY KEY (
       OUTCOMETYPECODE
    )
);
CREATE TABLE AESTATUSHIST
(   ORGID INTEGER
  , HSTAESTATHISTCTR SMALLINT
  , HSTAECONDAPPRFRDT DATE
  , HSTAESTATUSFRDT DATE
  , HSTAESTATUSKEY CHARACTER (2)
  , HSTAESTATUSTODT DATE
  , HSTAESTAUPDPERSID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_AESTATUSHIST PRIMARY KEY (
       ORGID
     , HSTAESTATHISTCTR
    )
);

CREATE TABLE ALERTPARAMETER
(   ALERTPARAMETERID INTEGER
  , ALERTNUMBER DECIMAL (3,0)
  , ALERTTYPE CHARACTER (1)
  , PROCESSIDENTIFIER DECIMAL (3,0)
  , RECIPIENTROLEID INTEGER
  , SUBJECTROLEID INTEGER
  , CENTRALMBGROUPID INTEGER
  , MSGTEXTID INTEGER
  , PROCESSDESC CHARACTER (200)
  , EXPIRYDAYS SMALLINT
  , ALERTRETENTIONPER SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_ALERTPARAMETER PRIMARY KEY (
       ALERTPARAMETERID
    )
);
CREATE TABLE AOPERSONROLE
(   PERSONID INTEGER
  , ROLEID INTEGER
  , LOCATIONID INTEGER
  , AOPRSNROLEHISTCNTR SMALLINT
  , AOPERSONROLEFROMDT TIMESTAMP(3)
  , AOPERSONROLETODATE DATE
  , UPDATINGPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_AOPERSONROLE PRIMARY KEY (
       PERSONID
     , ROLEID
     , LOCATIONID
    )
);
CREATE TABLE AOPERSONROLEHIST
(   PERSONID INTEGER
  , ROLEID INTEGER
  , LOCATIONID INTEGER
  , AOPRSNROLEHISTCNTR SMALLINT
  , AOPERSONROLEFROMDT TIMESTAMP(3)
  , AOPERSONROLETODATE DATE
  , UPDATINGPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_AOPERSONROLEHIST PRIMARY KEY (
       PERSONID
     , ROLEID
     , LOCATIONID
     , AOPRSNROLEHISTCNTR
    )
);
CREATE TABLE AOTOAELINK
(   LOCATIONID INTEGER
  , ORGID INTEGER
  , AOTOAEORGLOCCNTR INTEGER
  , AOTOAEFROMDATE DATE
  , AOTOAETODATE DATE
  , AOTOAEUPDPERSID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_AOTOAELINK PRIMARY KEY (
       LOCATIONID
     , ORGID
     , AOTOAEORGLOCCNTR
    )
);
CREATE TABLE APPCHKLSTMSTITM
(   APPCHKLSTMSTITMID INTEGER
  , APCKLSTMITEMFRDT DATE
  , APCKLSTMITEMTODT DATE
  , APCKLSTUPDPERSID INTEGER
  , APCKLSTMSTITEMTEXT TEXT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_APPCHKLSTMSTITM PRIMARY KEY (
       APPCHKLSTMSTITMID
    )
);
CREATE TABLE APPCHKLSTMSTITMLNK
(   APPCHKLSTMSTITMID INTEGER
  , APPCHKLSTMSTID INTEGER
  , APCKLSTMITMLNKFRDT DATE
  , APCKLSTMITMLNKTODT DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_APPCHKLSTMSTITMLNK PRIMARY KEY (
       APPCHKLSTMSTID
     , APPCHKLSTMSTITMID
    )
);
CREATE TABLE APPEALEVENT
(   COMPLAINTID INTEGER
  , APPEVNTCOUNTER INTEGER
  , APPEVNTUPDPERSID INTEGER
  , APPEVNTCOMMENT CHARACTER (200)
  , APPEVNTCONPERSID INTEGER
  , APPEVNTDTTM TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_APPEALEVENT PRIMARY KEY (
       COMPLAINTID
     , APPEVNTCOUNTER
    )
);
CREATE TABLE APPREQCHECKLISTITM
(   APPCHKLSTMSTITMID INTEGER
  , APPREQUESTID INTEGER
  , APPCHKLSTMSTID INTEGER
  , APPREQCHKUPDPERSID INTEGER
  , APCKLSTSTSDTFROM DATE
  , APPCHKLSTITSTATUS CHARACTER (2)
  , APPCHKLSTHISTCNTR SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_APPREQCHECKLISTITM PRIMARY KEY (
       APPREQUESTID
     , APPCHKLSTMSTID
     , APPCHKLSTMSTITMID
    )
);
CREATE TABLE APPREQCKLSTITMHIST
(   APPCHKLSTMSTITMID INTEGER
  , APPREQUESTID INTEGER
  , APPCHKLSTMSTID INTEGER
  , HSTAPPCHKLSTHSTCTR SMALLINT
  , HSTAPREQCKUPDPERID INTEGER
  , HSTAPCKLSTSTSDTFRM DATE
  , HSTAPCKLSTSTSDTEND DATE
  , HSTAPPCHKLSTSTAKEY CHARACTER (2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_APPREQCKLSTITMHIST PRIMARY KEY (
       APPREQUESTID
     , APPCHKLSTMSTID
     , APPCHKLSTMSTITMID
     , HSTAPPCHKLSTHSTCTR
    )
);
CREATE TABLE APPROVALAPPLIC
(   APPROVALAPPLICID INTEGER
  , APPLYINGPERSONID INTEGER
  , APPROVAPPLORGID INTEGER
  , ASSIGNEDAOLOCID INTEGER
  , APPROVALREQUESTDT DATE
  , REQUESTORNAME CHARACTER (90)
  , REQUESTORNAMEC CHARACTER (90)
  , DOCUMENTLOCATION CHARACTER (100)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_APPROVAPPLICATION PRIMARY KEY (
       APPROVALAPPLICID
    )
);
CREATE TABLE APPROVALCHKLSTMST
(   APPCHKLSTMSTID INTEGER
  , MOTTGVERSIONID INTEGER
  , APCKLSTMSTFRDT DATE
  , APCKLSTMASTTODT DATE
  , APPCHKLSTMSTDESC CHARACTER (100)
  , APPRVLCHKLSTMSTNM CHARACTER (10)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_APPROVALCHKLSTMST PRIMARY KEY (
       APPCHKLSTMSTID
    )
);
CREATE TABLE APPROVALREQUEST
(   APPREQUESTID INTEGER
  , APPROVALAPPLICID INTEGER
  , LOCATIONID INTEGER
  , ORGID INTEGER
  , ORGANISATNLOCID INTEGER
  , APPREQUPDPERSID INTEGER
  , APPREQUESTTYPE CHARACTER (1)
  , APPREQUESTCLASSES CHARACTER (100)
  , REFERREDBACKDATE DATE
  , REJECTDATE DATE
  , SEAMLESSTRANSFERDT DATE
  , APPREQCANCELDT DATE
  , AIPEXPIRYDATE DATE
  , METINHERITFLAG CHARACTER (1)
  , UPDATINGDATETIME TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_APPROVALREQUEST PRIMARY KEY (
       APPREQUESTID
    )
);
CREATE TABLE AREA
(   AREAID INTEGER
  , AREANAME CHARACTER (50)
  , AREANUMBER CHARACTER (10)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_AREA PRIMARY KEY (
       AREAID
    )
);
CREATE TABLE CALENDAR
(   CALENDARID INTEGER
  , CALDATE DATE
  , CALDAY CHARACTER (9)
  , CALDESCRIPTION CHARACTER (100)
  , COUNTRYFLAG CHARACTER (1)
  , CALDAYNO SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CALENDAR PRIMARY KEY (
       CALENDARID
    )
);
CREATE TABLE CATALOGUE
(   CATALOGUEID INTEGER
  , CATALOGUEFROMDATE DATE
  , CATALOGUEFRZNDATE DATE
  , CATALOGUETODATE DATE
  , CATALOGUEVERSION CHARACTER (10)
  , CATCURRTYPE CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CATALOGUE PRIMARY KEY (
       CATALOGUEID
    )
);
CREATE TABLE CATALOGUEITEM
(   CATALOGUEITMID INTEGER
  , CATALOGUEID INTEGER
  , MONITOREDITEMID CHARACTER (3)
  , VATCLASSID CHARACTER (2)
  , CATALOGUEITMCODE CHARACTER (10)
  , CATALOGUEITMDES CHARACTER (200)
  , CATALOGUEITMFULFLR CHARACTER (1)
  , GENLEDGERCODE CHARACTER (24)
  , CATALOGUEITMTYPE CHARACTER (1)
  , GENLEDGERSHORTCODE CHARACTER (4)
  , CATITMPRICEUPDPERS INTEGER
  , CATITMINTPRICE DECIMAL (9,2)
  , CATITMEXTPRICE DECIMAL (9,2)
  , CATITMTARGET CHARACTER (1)
  , CATITMSORTORDER SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CATALOGUEITMID PRIMARY KEY (
       CATALOGUEITMID
    )
);
CREATE TABLE CENTRALMBGROUP
(   CENTRALMBGROUPID INTEGER
  , CMBGDESC CHARACTER (50)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CENTRALMBGROUP PRIMARY KEY (
       CENTRALMBGROUPID
    )
);
CREATE TABLE CERTIFICATE
(   CERTIFICATENUMBER CHARACTER (10)
  , CERTSTATUSKEY CHARACTER (2)
  , CERTSTATUSHISTCNTR SMALLINT
  , CERTSTATUSFROMDATE DATE
  , CERTSTATUSTODATE DATE
  , CERTSTSCRIMENUMBER CHARACTER (50)
  , CERTSTSCRIMECONTCT CHARACTER (200)
  , PADFIRSTCERTNO CHARACTER (10)
  , CERTSTATUSPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CERTIFICATE PRIMARY KEY (
       CERTIFICATENUMBER
    )
);
CREATE TABLE CERTSTATUSHISTORY
(   CERTIFICATENUMBER CHARACTER (10)
  , CERTSTATUSHISTCNTR SMALLINT
  , CERTSTATUSFROMDATE DATE
  , CERTSTATUSTODATE DATE
  , CERTSTATUSKEY CHARACTER (2)
  , CERTSTSCRIMENUMBER CHARACTER (50)
  , CERTSTSCRIMECONTCT CHARACTER (200)
  , CERTSTATUSPERSONID INTEGER
  , PADFIRSTCERTNO CHARACTER (10)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CERTSTATUSHISTORY PRIMARY KEY (
       CERTIFICATENUMBER
     , CERTSTATUSHISTCNTR
    )
);
CREATE TABLE CLAREFRESHINTERVAL
(   MOTTGVERSIONID INTEGER
  , TESTCLASSGROUPID CHARACTER (1)
  , CLASSREFRESHINTRVL SMALLINT
  , CLSREFINTRVLNOTEST SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CLAREFRESHINTERVAL PRIMARY KEY (
       MOTTGVERSIONID
     , TESTCLASSGROUPID
    )
);
CREATE TABLE CLASSCONDOFAPPOINT
(   CLASSCONDITIONID INTEGER
  , CONDITIONOFAPPID INTEGER
  , TESTCLASSID CHARACTER (2)
  , MOTTGVERSIONID INTEGER
  , CLASSCONDITIONFRDT DATE
  , CLSCONDUPDPERSID INTEGER
  , CLSCONDAPPHISTCNTR SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CLASSCONDOFAPPOINT PRIMARY KEY (
       CLASSCONDITIONID
    )
);
CREATE TABLE COMPLAINT
(   COMPLAINTID INTEGER
  , COMPLAININGPERSID INTEGER
  , COMPLAINTCATGID INTEGER
  , MEMBEROFPBLCID INTEGER
  , APPEALFEEDUE CHARACTER (1)
  , APPEALFEEAMOUNT DECIMAL (9,2)
  , APPEALFEEPAIDDATE DATE
  , APPEALFEEREFUNDED CHARACTER (1)
  , CMPLASSGNTOPERSID INTEGER
  , COMPLAINTDESC CHARACTER (250)
  , COMPLAINTOUTCOME CHARACTER (100)
  , CMPLRAISINGPERSID INTEGER
  , CMPLRECEIVEDDT DATE
  , COMPLVEHADDRLN1 CHARACTER (50)
  , COMPLVEHADDRLN1C CHARACTER (50)
  , COMPLVEHADDRLN2 CHARACTER (50)
  , COMPLVEHADDRLN3 CHARACTER (50)
  , COMPLVEHADDRLN4 CHARACTER (50)
  , COMPLVEHADDRLN4C CHARACTER (50)
  , COMPLVEHDECL CHARACTER (100)
  , COMPLVEHPOSTCODE CHARACTER (8)
  , ORGANISATNLOCID INTEGER
  , APPEALASSESSMNTACT CHARACTER (3)
  , APPEALINSCOPE CHARACTER (1)
  , APPEALINSPVTSNO CHARACTER (10)
  , APPEALINVSTGTCODE CHARACTER (10)
  , APPEALRAISPERSID INTEGER
  , APPEALREASON CHARACTER (255)
  , APPEALRESULTINGACT CHARACTER (3)
  , APPEALTEXT TEXT
  , APPEALTYPE CHARACTER (1)
  , APPEALUPDPERSONID INTEGER
  , APPEALVTSFEEPAID DECIMAL (9,2)
  , APPEALVTSFEEDUE CHARACTER (1)
  , AOLOCATIONID INTEGER
  , COMPSTATUSKEY CHARACTER (2)
  , COMPLSTATUSFRDT DATE
  , COMPLSTAUPDPERSID INTEGER
  , COMPLSTAHISTCNTR SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_COMPLAINT PRIMARY KEY (
       COMPLAINTID
    )
);
CREATE TABLE COMPLAINTCATEGORY
(   COMPLAINTCATGID INTEGER
  , COMPLCATEGORYDESC CHARACTER (20)
  , COMPLAINTCATGFRDT DATE
  , COMPLAINTCATGTODT DATE
  , COMPLCATEGORYASSOC CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_COMPLAINTCATEGORY PRIMARY KEY (
       COMPLAINTCATGID
    )
);
CREATE TABLE COMPLAINTSTAHIST
(   COMPLAINTID INTEGER
  , HSTCOMPLSTAHSTCNTR SMALLINT
  , HSTCOMPLSTATUSKEY CHARACTER (2)
  , HSTCOMPLSTATUSFRDT DATE
  , HSTCOMPLSTATUSTODT DATE
  , HSTCMPLSTAUPDPERID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_COMPLAINTSTAHIST PRIMARY KEY (
       COMPLAINTID
     , HSTCOMPLSTAHSTCNTR
    )
);
CREATE TABLE CONDOFAPPOINTMENT
(   CONDITIONOFAPPID INTEGER
  , MOTTGVERSIONID INTEGER
  , CONDITIONOFAPPFRDT DATE
  , CONDITIONOFAPPTODT DATE
  , CONDITIONOFAPPDES CHARACTER (100)
  , CONDITIONOFAPPVER CHARACTER (10)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CONDOFAPPOINTMENT PRIMARY KEY (
       CONDITIONOFAPPID
    )
);
CREATE TABLE COSTCENTRE
(   COSTCENTREID INTEGER
  , COSTCENTRECODE CHARACTER (10)
  , COSTCENTREDESC CHARACTER (100)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_COSTCENTRE PRIMARY KEY (
       COSTCENTREID
    )
);
CREATE TABLE COURSE
(   COURSECODE CHARACTER (10)
  , CRSEGENLEDGERCODE CHARACTER (24)
  , CRSINITIALCRSECODE CHARACTER (10)
  , CRSNAME CHARACTER (50)
  , CRSDESCRIPTION CHARACTER (250)
  , CRSNOTES CHARACTER (250)
  , CRSSTATUS CHARACTER (2)
  , CRSSELFBOOKING CHARACTER (1)
  , CRSINITREFRESHFLAG CHARACTER (1)
  , CRSBOOKINGCLOSURE SMALLINT
  , CRSEARLIESTCRSDATE DATE
  , CRSSTARTINGTIME TIME
  , CRSDURATION SMALLINT
  , CRSLATESTCRSDATE DATE
  , CRSFINISHINGTIME TIME
  , CRSMINNUMBER SMALLINT
  , CRSMAXVI SMALLINT
  , CRSMAXNUMBER SMALLINT
  , CRSMINSPAREPLACES SMALLINT
  , CRSOVERBOOKINGLMT SMALLINT
  , CRSTARGETBOOKING SMALLINT
  , CRSCOSTSAMOUNT DECIMAL (9,2)
  , CRSPREREADING CHARACTER (250)
  , CRSSTUDENTEQUIPREQ CHARACTER (100)
  , CRSPREREQUISITE01 CHARACTER (100)
  , CRSPREREQUISITE02 CHARACTER (100)
  , CRSPREREQUISITE03 CHARACTER (100)
  , CRSPREREQUISITE04 CHARACTER (100)
  , CRSPREREQUISITE05 CHARACTER (100)
  , CRSPREREQUISITE06 CHARACTER (100)
  , CRSPREREQUISITE07 CHARACTER (100)
  , CRSPREREQUISITE08 CHARACTER (100)
  , CRSPREREQUISITE09 CHARACTER (100)
  , CRSPREREQUISITE10 CHARACTER (100)
  , CRSSUCCESSCRITERIA CHARACTER (1)
  , CRSQULONCOMPLETION CHARACTER (100)
  , CRSROLEID INTEGER
  , CRSTESTCLASSGRPID CHARACTER (1)
  , CRSAOADMIN CHARACTER (1)
  , VATCLASSID CHARACTER (2)
  , QUALIFICATNTYPID INTEGER
  , CRSVOSAROLEID INTEGER
  , NTTACOURSECODE CHARACTER (10)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_COURSE PRIMARY KEY (
       COURSECODE
    )
);
CREATE TABLE CRSADHOCCOMMUNIC
(   APPLICATIONNUMBER INTEGER
  , COURSECODE CHARACTER (10)
  , COMMUNICNUMBER INTEGER
  , CRSAHCOMUNICATNDES CHARACTER (100)
  , CRSAHDATESENT DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CRSADHOCCOMMUNIC PRIMARY KEY (
       APPLICATIONNUMBER
     , COMMUNICNUMBER
    )
);
CREATE TABLE CRSAPPCHECKLISTITM
(   APPLICATIONNUMBER INTEGER
  , COURSECODE CHARACTER (10)
  , APPCHLSTITSTATUS01 CHARACTER (2)
  , APPCHLSTITSTATUS02 CHARACTER (2)
  , APPCHLSTITSTATUS03 CHARACTER (2)
  , APPCHLSTITSTATUS04 CHARACTER (2)
  , APPCHLSTITSTATUS05 CHARACTER (2)
  , APPCHLSTITSTATUS06 CHARACTER (2)
  , APPCHLSTITSTATUS07 CHARACTER (2)
  , APPCHLSTITSTATUS08 CHARACTER (2)
  , APPCHLSTITSTATUS09 CHARACTER (2)
  , APPCHLSTITSTATUS10 CHARACTER (2)
  , APPCHLSTREASREJ01 CHARACTER (50)
  , APPCHLSTREASREJ02 CHARACTER (50)
  , APPCHLSTREASREJ03 CHARACTER (50)
  , APPCHLSTREASREJ04 CHARACTER (50)
  , APPCHLSTREASREJ05 CHARACTER (50)
  , APPCHLSTREASREJ06 CHARACTER (50)
  , APPCHLSTREASREJ07 CHARACTER (50)
  , APPCHLSTREASREJ08 CHARACTER (50)
  , APPCHLSTREASREJ09 CHARACTER (50)
  , APPCHLSTREASREJ10 CHARACTER (50)
  , APCKLSTREFBACKDT01 DATE
  , APCKLSTREFBACKDT02 DATE
  , APCKLSTREFBACKDT03 DATE
  , APCKLSTREFBACKDT04 DATE
  , APCKLSTREFBACKDT05 DATE
  , APCKLSTREFBACKDT06 DATE
  , APCKLSTREFBACKDT07 DATE
  , APCKLSTREFBACKDT08 DATE
  , APCKLSTREFBACKDT09 DATE
  , APCKLSTREFBACKDT10 DATE
  , APCKLSTLASTUPDDT01 TIMESTAMP(3)
  , APCKLSTLASTUPDDT02 TIMESTAMP(3)
  , APCKLSTLASTUPDDT03 TIMESTAMP(3)
  , APCKLSTLASTUPDDT04 TIMESTAMP(3)
  , APCKLSTLASTUPDDT05 TIMESTAMP(3)
  , APCKLSTLASTUPDDT06 TIMESTAMP(3)
  , APCKLSTLASTUPDDT07 TIMESTAMP(3)
  , APCKLSTLASTUPDDT08 TIMESTAMP(3)
  , APCKLSTLASTUPDDT09 TIMESTAMP(3)
  , APCKLSTLASTUPDDT10 TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CRSAPPCHECKLISTITM PRIMARY KEY (
       APPLICATIONNUMBER
    )
);
CREATE TABLE CRSAPPLICSOURCE
(   CRSAPPSOURCEID INTEGER
  , CRSAPPSOURCE CHARACTER (50)
  , CRSAPPSOURCEFRDT DATE
  , CRSAPPSOURCETODATE DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CRSAPPLICSOURCE PRIMARY KEY (
       CRSAPPSOURCEID
    )
);
CREATE TABLE CRSCOMMAPPANDENROL
(   APPLICATIONNUMBER INTEGER
  , COMMUNICNUMBER INTEGER
  , COURSECODE CHARACTER (10)
  , EVENTCODE INTEGER
  , EVENTENROLHISTCNTR SMALLINT
  , DEFAULTCOMMCODE CHARACTER (6)
  , CRSCOMMAPPENSENTDT DATE
  , EVENTSTARTDATE DATE
  , CREATIONDATE DATE
  , MESSAGEID INTEGER
  , PENDINGMSGID INTEGER
  , CREATINGPERSONID INTEGER
  , DEFAULTCOMMTYPE CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CRSCOMMAPPANDENROL PRIMARY KEY (
       APPLICATIONNUMBER
     , COMMUNICNUMBER
    )
);
CREATE TABLE CRSEAPPLIC
(   COURSECODE CHARACTER (10)
  , APPLICATIONNUMBER INTEGER
  , EVENTENROLHISTCNTR SMALLINT
  , EVENTCODE INTEGER
  , APPLYINGPERSID INTEGER
  , RAISINGPERSID INTEGER
  , SPONSLOCATIONID INTEGER
  , APPLICATIONRECDDT DATE
  , CRSAPPREASON CHARACTER (5)
  , CRSAPPSOURCEID INTEGER
  , ORIGINALAPPLICNUM INTEGER
  , CRSAPPNOTES CHARACTER (100)
  , CRSAPPPRIORITY CHARACTER (1)
  , SELECTEDNOTFSTAVLB CHARACTER (1)
  , CRSAPPCONTACTREAS CHARACTER (100)
  , CRSAPPSTATUSKEY CHARACTER (2)
  , CRSAPPCANCELLEDDT DATE
  , EVENTENROLDATE DATE
  , EVNTENRRSNGPERSID INTEGER
  , REASONENRLCNCLID INTEGER
  , EVENTENROLRESULT CHARACTER (1)
  , EVNTENRLRSLTDATE DATE
  , EVENTENROLTRNASMT CHARACTER (250)
  , ENROLMENTSTATUS CHARACTER (2)
  , EVENTENROLSTSFRDT DATE
  , EVENTENROLSTSTODT DATE
  , EVTENROLSTSHSTCNTR SMALLINT
  , EVTENRSTAUPDPERSID INTEGER
  , CRSAPPPAYMNTMETHOD CHARACTER (1)
  , VATRATEID INTEGER
  , AOLOCATIONID INTEGER
  , EVNTENROLJISENT CHARACTER (1)
  , CRSINITREFRESHER CHARACTER (1)
  , BOOKINGPERSONID INTEGER
  , APPLICANTTYPE CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CRSEAPPLIC PRIMARY KEY (
       APPLICATIONNUMBER
    )
);
CREATE TABLE CRSEENROLMENTHIST
(   COURSECODE CHARACTER (10)
  , APPLICATIONNUMBER INTEGER
  , EVENTENROLHISTCNTR SMALLINT
  , EVENTCODE INTEGER
  , EVENTENROLDATE DATE
  , EVNTENRRSNGPERSID INTEGER
  , REASONENRCANCELID INTEGER
  , EVENTENROLRESULT CHARACTER (1)
  , EVENTENROLTRNASMT CHARACTER (250)
  , ENROLMENTSTATUS CHARACTER (2)
  , EVENTENROLSTSFRDT DATE
  , EVENTENROLSTSTODT DATE
  , EVTENRSTAUPDPERSID INTEGER
  , EVNTENROLJISENT CHARACTER (1)
  , EVTENROLSTSHSTCNTR SMALLINT
  , VATRATEID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CRSEENROLMENTHIST PRIMARY KEY (
       APPLICATIONNUMBER
     , COURSECODE
     , EVENTCODE
     , EVENTENROLHISTCNTR
     , EVTENROLSTSHSTCNTR
    )
);
CREATE TABLE CRSEEVENT
(   COURSECODE CHARACTER (10)
  , EVENTCODE INTEGER
  , EVENTCONFIRMEDDATE DATE
  , EVENTCANCELDATE DATE
  , EVENTCNCLREASONID INTEGER
  , EVENTREPORTLOC CHARACTER (50)
  , EVENTSPECREQ CHARACTER (100)
  , EVENTMINSTUDENTS SMALLINT
  , EVENTATTENDALLOWED SMALLINT
  , EVENTMAXVISTAFF SMALLINT
  , EVENTBDGTDEXPEND DECIMAL (9,2)
  , EVENTACTEXPEND DECIMAL (9,2)
  , EVENTFREETEXT CHARACTER (100)
  , AOLOCATIONID INTEGER
  , VENUELOCATIONID INTEGER
  , EVENTSTARTDATE DATE
  , EVENTENDDATE DATE
  , EVENTCLOSEDDATE DATE
  , SUPPLIERDESC CHARACTER (60)
  , CNTTOTPLACESENRLD SMALLINT
  , CNTVOSAPLACESENRLD SMALLINT
  , CNTTRADPLACESENRLD SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CRSEEVENT PRIMARY KEY (
       COURSECODE
     , EVENTCODE
    )
);
CREATE TABLE CRSEPRICE
(   COURSECODE CHARACTER (10)
  , CRSPRICETODATE DATE
  , CRSPRICENUMBER INTEGER
  , CRSPRICEAMOUNT DECIMAL (9,2)
  , CRSPRICECRITERIA CHARACTER (250)
  , UPDATINGPERSONID INTEGER
  , CRSPRICEFROMDATE DATE
  , CRSSELFBOOKING CHARACTER (1)
  , CRSEPRICECURRTYPE CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CRSEPRICE PRIMARY KEY (
       COURSECODE
     , CRSPRICENUMBER
    )
);
CREATE TABLE CRSESESSION
(   COURSECODE CHARACTER (10)
  , EVENTCODE INTEGER
  , SESSIONNUMBER INTEGER
  , SESSIONTEMPNUMBER INTEGER
  , SESSIONSTARTDTTIME TIMESTAMP(3)
  , SESSIONENDDATETIME TIMESTAMP(3)
  , SESSIONDESCRIPTION CHARACTER (100)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_CRSESESSION PRIMARY KEY (
       COURSECODE
     , EVENTCODE
     , SESSIONNUMBER
    )
);
CREATE TABLE DAILYTESTSUMMARY
(   TESTCOMPLETIONDATE DATE
  , NORMVALIDPASSCNT INTEGER
  , INSPVALIDPASSCNT INTEGER
  , NORMVALIDFAILCNT INTEGER
  , NORMVALIDABANDCNT INTEGER
  , NORMINVPASSCNT INTEGER
  , NORMINVFAILCNT INTEGER
  , NORMINVABANDCNT INTEGER
  , NORMABORTCNT INTEGER
  , NORMREFUSALCNT INTEGER
  , LPVALIDPASSCNT INTEGER
  , LPVALIDFAILCNT INTEGER
  , LPVALIDABANDCNT INTEGER
  , LPABORTCNT INTEGER
  , EMERVALIDPASSCNT INTEGER
  , EMERVALIDFAILCNT INTEGER
  , EMERVALIDABANDCNT INTEGER
  , EMERABORTCNT INTEGER
  , UNKNOWNRESULTCNT INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_DAILYTSTSUMMARY PRIMARY KEY (
       TESTCOMPLETIONDATE
    )
);
CREATE TABLE DEFAULTCOMM
(   DEFAULTCOMMCODE CHARACTER (6)
  , DEFAULTCOMMDESC CHARACTER (60)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_DEFAULTCOMM PRIMARY KEY (
       DEFAULTCOMMCODE
    )
);
CREATE TABLE DEFAULTCOMMSTOCRS
(   COURSECODE CHARACTER (10)
  , DEFAULTCOMMTYPE CHARACTER (1)
  , DEFAULTCOMMCODE CHARACTER (6)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_DEFAULTCOMMSTOCRS PRIMARY KEY (
       COURSECODE
     , DEFAULTCOMMTYPE
    )
);
CREATE TABLE DEMORESULTTYPE
(   DEMORESULTTYPEID CHARACTER (2)
  , DEMORESULTDESC CHARACTER (30)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_DEMORESULTTYPE PRIMARY KEY (
       DEMORESULTTYPEID
    )
);
CREATE TABLE DVLAMISMATCH
(   TSTVEHROOTVRM CHARACTER (13)
  , TSTVEHROOTHISTCNTR SMALLINT
  , TESTVEHVRM CHARACTER (13)
  , VEHTESTCNTR SMALLINT
  , DVLAMISMATCHDATE DATE
  , DVLAMISMATCHTYPE CHARACTER (1)
  , DVLAMMCOUNT SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_DVLAMISMATCH PRIMARY KEY (
       TSTVEHROOTVRM
     , TSTVEHROOTHISTCNTR
    )
);
CREATE TABLE DVLAPROPULSIONDCD
(   DVLAPROPCODE CHARACTER (2)
  , DVLAPROPDESC CHARACTER (23)
  , VSIPROPCODE CHARACTER (2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_DVLAPROPULSIONDCD PRIMARY KEY (
       DVLAPROPCODE
    )
);
CREATE TABLE DVLAVEHCOLOURDCD
(   DVLACOLOURCODE CHARACTER (1)
  , DVLACOLOURDESC CHARACTER (16)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_DVLAVEHCOLOURDCD PRIMARY KEY (
       DVLACOLOURCODE
    )
);
CREATE TABLE DVLAVEHICLEDATA
(   DVLAVRM CHARACTER (13)
  , DVLAVRMCHECKDIGIT CHARACTER (1)
  , DVLAVIN CHARACTER (20)
  , CTRELATEDMARK CHARACTER (13)
  , DVLAMAKECODE CHARACTER (2)
  , DVLAMODELCODE CHARACTER (3)
  , DVLABODYCODE CHARACTER (2)
  , WHEELPLANCODE CHARACTER (1)
  , SEATINGCAPACITY SMALLINT
  , DVLAGROSSWEIGHT INTEGER
  , DVLAUNLADENWEIGHT INTEGER
  , DVLAVEHCYLCAPACITY INTEGER
  , DVLAPROPCODE CHARACTER (2)
  , SVAEMISSIONSTD CHARACTER (6)
  , DVLACOLOURCODE CHARACTER (1)
  , DVLACOLOURCODE2 CHARACTER (1)
  , DVLAVEHENGINENO CHARACTER (30)
  , DVLAVEHMFACTUREDDT DATE
  , DVLAVEHFIRSTREGDT DATE
  , DVLAVEHNWATFRSTREG CHARACTER (1)
  , DVLAMAKEMODEL CHARACTER (60)
  , DVLADAMAGEDMARKER CHARACTER (1)
  , DVLAFROMDATE DATE
  , DVLAMAKETEXT CHARACTER (30)
  , DVLAMODELTEXT CHARACTER (30)
  , INCOGVEHFLAG CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_DVLAVEHICLEDATA PRIMARY KEY (
       DVLAVRM
    )
);
CREATE TABLE DVLAVEHICLEHIST
(   DVLAREFVRM CHARACTER (13)
  , DVLAREFVRMHISTCNTR INTEGER
  , DVLAREFVIN CHARACTER (20)
  , DVLAREFV5REFNO DECIMAL (14,0)
  , DVLAREFFROMDATE DATE
  , DVLAREFTODATE DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_DVLAVEHICLEHIST PRIMARY KEY (
       DVLAREFVRM
     , DVLAREFVRMHISTCNTR
    )
);
CREATE TABLE DVLAVEHMAKEDCD
(   DVLAMAKECODE CHARACTER (2)
  , DVLAMAKEDESC CHARACTER (30)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_DVLAVEHMAKEDCD PRIMARY KEY (
       DVLAMAKECODE
    )
);
CREATE TABLE DVLAVEHMODELDCD
(   DVLAMAKECODE CHARACTER (2)
  , DVLAMODELCODE CHARACTER (3)
  , DVLAMODELDESC CHARACTER (30)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_DVLAVEHMODELDCD PRIMARY KEY (
       DVLAMAKECODE
     , DVLAMODELCODE
    )
);
CREATE TABLE ELECTRONICPAD
(   ELECTRONICPADID INTEGER
  , LOCATIONTYPE CHARACTER (1)
  , LOCATIONNUMBER CHARACTER (10)
  , VTSDEVICEIPADDR4 SMALLINT
  , LOCATIONID INTEGER
  , INSERTEDDATETIME TIMESTAMP(3)
  , UPDATINGPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_ELECTRONICPAD PRIMARY KEY (
       ELECTRONICPADID
    )
);
CREATE TABLE EMERINCLOG
(   EMERGINNUMBER CHARACTER (7)
  , EMERGINDESC CHARACTER (250)
  , EMERGINSTARTDATE DATE
  , EMERGINENDDATE DATE
  , PERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_EMERINCLOG PRIMARY KEY (
       EMERGINNUMBER
    )
);
CREATE TABLE EMERINCVTS
(   EMERGINVTSCNTR SMALLINT
  , VERIFYINGPERID INTEGER
  , LOCATIONID INTEGER
  , EMERGINNUMBER CHARACTER (7)
  , EMERGINVERIFYDATE TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_EMERINCVTS PRIMARY KEY (
       LOCATIONID
     , EMERGINNUMBER
     , EMERGINVTSCNTR
    )
);
CREATE TABLE EQUIPLIMSOVRREA
(   EQPLIMSOVRDID INTEGER
  , EQPLIMSOVRDREAS CHARACTER (50)
  , EQPLIMSOVRDRESFRDT DATE
  , EQPLIMSOVRDRESTODT DATE
  , EQUIPTYPEID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_EQUIPLIMSOVRREA PRIMARY KEY (
       EQPLIMSOVRDID
    )
);
CREATE TABLE EQUIPMENTMAN
(   EQUIPMANID INTEGER
  , EQUIPMANUFACTURER CHARACTER (30)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_EQUIPMENTMAN PRIMARY KEY (
       EQUIPMANID
    )
);
CREATE TABLE EQUIPMENTTYPE
(   EQUIPTYPEID INTEGER
  , EQUIPTYPECODE CHARACTER (4)
  , EQUIPTYPEDES CHARACTER (100)
  , EQUIPTYPEINTERFACE CHARACTER (1)
  , SBSAPPLOGIC CHARACTER (2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_EQUIPTYPE PRIMARY KEY (
       EQUIPTYPEID
    )
);
CREATE TABLE EQUIPMODEL
(   EQUIPTYPEID INTEGER
  , EQUIPMANID INTEGER
  , EQUIPMENTID INTEGER
  , EQUIPMENTMODELDESC CHARACTER (20)
  , EQUIPMENTLASTUSEDT DATE
  , EQUIPMENTLASTINSDT DATE
  , EQUIPMENTREFNUMBER CHARACTER (20)
  , EQUIPMENTCLBRFREQ SMALLINT
  , CALIBRATIONNEEDED CHARACTER (1)
  , SUSPENDCALIBRATION CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_EQUIPMODEL PRIMARY KEY (
       EQUIPMENTID
    )
);
CREATE TABLE EQUIPRSLTOVRREA
(   EQPRSLTOVRDID INTEGER
  , EQPRSLTOVRDREAS CHARACTER (50)
  , EQPRSLTOVRDRESFRDT DATE
  , EQPRSLTOVRDRESTODT DATE
  , EQUIPTYPEID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_EQUIPRSLTOVRREA PRIMARY KEY (
       EQPRSLTOVRDID
    )
);
CREATE TABLE EQUIPTYPEGROUP
(   EQUIPTYPEGROUPID INTEGER
  , EQUIPTYPEGROUPCODE CHARACTER (5)
  , EQUIPTYPEGROUPDESC CHARACTER (100)
  , EQUIPTYPERULE CHARACTER (1)
  , TESTCLASSID CHARACTER (2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_EQUIPTYPEGROUP PRIMARY KEY (
       EQUIPTYPEGROUPID
    )
);
CREATE TABLE EQUIPTYPETOGRPLNK
(   EQUIPTYPEID INTEGER
  , EQUIPTYPEGROUPID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_EQUIPTYPETOGRPLNK PRIMARY KEY (
       EQUIPTYPEGROUPID
     , EQUIPTYPEID
    )
);
CREATE TABLE EVENTCANCELREASON
(   EVENTCNCLREASONID INTEGER
  , EVENTCNCLREASON CHARACTER (50)
  , EVENTCNCLREASFRDT DATE
  , EVENTCNCLREASTODT DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_EVENTCANCELREASON PRIMARY KEY (
       EVENTCNCLREASONID
    )
);
CREATE TABLE EVENTFEEDBACK
(   APPLICATIONNUMBER INTEGER
  , COURSECODE CHARACTER (10)
  , EVENTCODE INTEGER
  , EVENTENROLHISTCNTR SMALLINT
  , Q1 SMALLINT
  , Q2 SMALLINT
  , Q3 SMALLINT
  , Q4 SMALLINT
  , Q5 SMALLINT
  , Q6 SMALLINT
  , Q7 SMALLINT
  , Q8 SMALLINT
  , Q9 SMALLINT
  , Q10 SMALLINT
  , Q11 SMALLINT
  , Q12 SMALLINT
  , Q13 SMALLINT
  , Q14 SMALLINT
  , Q15 SMALLINT
  , Q16 SMALLINT
  , Q17 SMALLINT
  , Q18 SMALLINT
  , Q19 SMALLINT
  , Q20 SMALLINT
  , Q21 SMALLINT
  , Q22 SMALLINT
  , Q23 SMALLINT
  , Q24 SMALLINT
  , Q25 SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_EVENTFEEDBACK PRIMARY KEY (
       APPLICATIONNUMBER
     , COURSECODE
     , EVENTCODE
     , EVENTENROLHISTCNTR
    )
);
CREATE TABLE FAILURELOCATION
(   FAILURELOCATIONID CHARACTER (1)
  , FAILURELOCATIONTXT CHARACTER (20)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_FAILURELOCATION PRIMARY KEY (
       FAILURELOCATIONID
    )
);
CREATE TABLE FINANCETRANSFER
(   TRANSFERID INTEGER
  , TRANSFERCODE CHARACTER (13)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_FINANCETRANSFER PRIMARY KEY (
       TRANSFERID
    )
);
CREATE TABLE HISTORSTACHECK
(   HISTORYCHECKID INTEGER
  , MEMBEROFPBLCID INTEGER
  , HISTORYCHKAUTHEN CHARACTER (1)
  , HISTORYCHKPRCSDDT DATE
  , HISTORYCHKRCVDDT TIMESTAMP(3)
  , HISTORYCHKRESULT CHARACTER (1)
  , HISTORYCHKTESTNO DECIMAL (12,0)
  , HISTORYCHKV5REFNO DECIMAL (14,0)
  , HISTORYCHKVRM CHARACTER (13)
  , UPDATINGPERSONID INTEGER
  , HISTORYCHKFUNC CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_HISTORSTACHECK PRIMARY KEY (
       HISTORYCHECKID
    )
);
CREATE TABLE INCOGNITOVEHICLE
(   INCOVEHID INTEGER
  , DVLAVRM CHARACTER (13)
  , INCOVEHENDDATE DATE
  , INCOVEHPRVTSTEXPDT DATE
  , INCOVEHICLESTRTDT DATE
  , INCVEHAUTHPERSID INTEGER
  , INCOGVIN CHARACTER (20)
  , INCOVEHAOLOCID INTEGER
  , INCOVEHVEPERSID INTEGER
  , INCOVEHPRVTSTDT DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_INCOGNITOVEHICLE PRIMARY KEY (
       INCOVEHID
    )
);
CREATE TABLE INSPECTIONWITNESS
(   TESTVEHVRM CHARACTER (13)
  , VEHTESTCNTR SMALLINT
  , INSPCTNWITNESSCNTR SMALLINT
  , INSPCTNWITNESSNAME CHARACTER (30)
  , INSPCTNWITNESSRPBL CHARACTER (50)
  , INSPCTNWITNESSROLE CHARACTER (20)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_INSPECTIONWITNESS PRIMARY KEY (
       TESTVEHVRM
     , VEHTESTCNTR
     , INSPCTNWITNESSCNTR
    )
);
CREATE TABLE LOCALTESTQUEUEHIST
(   LPTESTNUMBER DECIMAL (12,0)
  , LOCATIONTYPE CHARACTER (1)
  , LOCATIONNUMBER CHARACTER (10)
  , VTSDEVICEIPADDR4 SMALLINT
  , LOCATIONID INTEGER
  , LPSERVERPERSONID INTEGER
  , LPRECORDINGPRSNID INTEGER
  , LPRECDINGSMRTCRDID INTEGER
  , LPTESTDATETIME TIMESTAMP(3)
  , LPVTSTOSERVDTTM TIMESTAMP(3)
  , LPSERVTOHOSTDTTM TIMESTAMP(3)
  , LPTESTAWTRAOPENCNT SMALLINT
  , LPAUTHORISECODE CHARACTER (16)
  , LPAUTHVTSPERSONID INTEGER
  , LPAUTHVTSDATETIME TIMESTAMP(3)
  , VTSTOCOLVERSION SMALLINT
  , LPTESTSTATUS CHARACTER (1)
  , LPERRORTEXT CHARACTER (100)
  , LPTSTUPLNOTPROCCNT SMALLINT
  , LPENTRYREASON CHARACTER (2)
  , LPTESTDETAILS TEXT
  , COLLECTORNAME CHARACTER (5)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_LOCALTESTQUEHIS PRIMARY KEY (
       LPTESTNUMBER
     , LOCATIONTYPE
     , LOCATIONNUMBER
     , VTSDEVICEIPADDR4
    )
);
CREATE TABLE LOCATION
(   LOCATIONID INTEGER
  , DUALLANGUAGEFLAG CHARACTER (1)
  , LOCATIONADDRESSLN1 CHARACTER (50)
  , LOCATIONADDRESSL1C CHARACTER (50)
  , LOCATIONADDRESSLN2 CHARACTER (50)
  , LOCATIONADDRESSLN3 CHARACTER (50)
  , LOCATIONADDRESSLN4 CHARACTER (50)
  , LOCATIONADDRESSL4C CHARACTER (50)
  , LOCATIONFAXNUMBER CHARACTER (24)
  , LOCATIONPHONEPRFX CHARACTER (3)
  , LOCATIONPOSTCODE CHARACTER (8)
  , LOCATIONTELNUMBER CHARACTER (24)
  , TESTSLOTCOUNT SMALLINT
  , LOCATIONTYPE CHARACTER (1)
  , AREAID INTEGER
  , LOCAONAME CHARACTER (50)
  , LOCAONUMBER CHARACTER (10)
  , SITELAYOUTDATE DATE
  , SITELEASEEXPDATE DATE
  , SITENUMBER CHARACTER (10)
  , SITEPLANLEVEL CHARACTER (10)
  , SITEPLANPERMISSION CHARACTER (1)
  , SITERURALINDICATOR CHARACTER (1)
  , LOCUPDPERSID INTEGER
  , VTSCONDAPPEXPIRYDT DATE
  , VTSLASTCONFIRMEDDT DATE
  , ZONEID INTEGER
  , VTSZONEUPDPERSID INTEGER
  , VTSZONELINKFRDT DATE
  , VTSZONEHISTCNTR SMALLINT
  , VTSSTATRATPERSID INTEGER
  , VTSSTATUPDPERSID INTEGER
  , VTSSTATUSFROMDATE DATE
  , VTSSTATUSKEY CHARACTER (2)
  , VTSSTATHISTCNTR SMALLINT
  , LOCATIONVRONAME CHARACTER (30)
  , LOCVTSDEVCOUNT SMALLINT
  , LOCBANKHOLFLAG CHARACTER (1)
  , INSTALLDUEDATE DATE
  , LOCATIONNUMBER CHARACTER (10)
  , LOCATIONNAME CHARACTER (50)
  , LOCATIONNAMEC CHARACTER (50)
  , FORMSSENT CHARACTER (1)
  , EVENTREPORTLOC CHARACTER (50)
  , COUNTOPENTESTLOC SMALLINT
  , TESTDATELOC DATE
  , TESTCLASSEQP01 CHARACTER (1)
  , TESTCLASSEQP02 CHARACTER (1)
  , TESTCLASSEQP03 CHARACTER (1)
  , TESTCLASSEQP04 CHARACTER (1)
  , TESTCLASSEQP4A CHARACTER (1)
  , TESTCLASSEQP05 CHARACTER (1)
  , TESTCLASSEQP5A CHARACTER (1)
  , TESTCLASSEQP07 CHARACTER (1)
  , TESTCLASSDSM01 CHARACTER (1)
  , TESTCLASSDSM02 CHARACTER (1)
  , TESTCLASSDSM03 CHARACTER (1)
  , TESTCLASSDSM04 CHARACTER (1)
  , TESTCLASSDSM4A CHARACTER (1)
  , TESTCLASSDSM05 CHARACTER (1)
  , TESTCLASSDSM5A CHARACTER (1)
  , TESTCLASSDSM07 CHARACTER (1)
  , TESTCLASSEGA01 CHARACTER (1)
  , TESTCLASSEGA02 CHARACTER (1)
  , TESTCLASSEGA03 CHARACTER (1)
  , TESTCLASSEGA04 CHARACTER (1)
  , TESTCLASSEGA4A CHARACTER (1)
  , TESTCLASSEGA05 CHARACTER (1)
  , TESTCLASSEGA5A CHARACTER (1)
  , TESTCLASSEGA07 CHARACTER (1)
  , REPORTDATETIME TIMESTAMP(3)
  , VTSDIGESTDTTM TIMESTAMP(3)
  , LPINITIALAUTHTIME SMALLINT
  , LPINVOKEDDATE DATE
  , COUNTTESTSLOTINUSE SMALLINT
  , MEPID INTEGER
  , REMINDSLOTCOUNT SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_LOCATION PRIMARY KEY (
       LOCATIONID
    )
);

CREATE TABLE MAILMERGE
(   APPLICATIONNUMBER INTEGER
  , MAILMERGECNTR INTEGER
  , COMMUNICNUMBER INTEGER
  , CREATINGPERSONID INTEGER
  , CREATIONDATE DATE
  , LASTEXTRACTDATE TIMESTAMP(3)
  , AONAMEREF CHARACTER (50)
  , AONAMENT CHARACTER (50)
  , AONAMEAPP CHARACTER (50)
  , AOTELREF CHARACTER (24)
  , AOTELNT CHARACTER (24)
  , AOTELAPP CHARACTER (24)
  , CLASSREFRESHINTRVL SMALLINT
  , CRSAPPPAYMNTMETHOD CHARACTER (1)
  , CRSAPPREASON CHARACTER (5)
  , CRSAPPNOTES CHARACTER (100)
  , COURSECODE CHARACTER (10)
  , COURSEDESCRIPTION CHARACTER (250)
  , CRSDURATION SMALLINT
  , CRSINITREFRESHER CHARACTER (1)
  , CRSNAME CHARACTER (50)
  , CRSPREREADING CHARACTER (250)
  , COURSETYPE CHARACTER (1)
  , MOTREF CHARACTER (30)
  , EVENTENDDATE DATE
  , EVENTENDTIME TIME
  , EVENTSTARTDATE DATE
  , EVENTSTARTTIME TIME
  , EXPDATE DATE
  , INVOICEIND CHARACTER (1)
  , VENUEADDRESSLN1 CHARACTER (50)
  , VENUEADDRESSLN2 CHARACTER (50)
  , VENUEADDRESSLN3 CHARACTER (50)
  , VENUEADDRESSLN4 CHARACTER (50)
  , VENUEPOSTCODE CHARACTER (8)
  , MAPID CHARACTER (30)
  , OLDEVENTSTARTDATE DATE
  , VTSADD1 CHARACTER (50)
  , VTSADD2 CHARACTER (50)
  , VTSADD3 CHARACTER (50)
  , VTSADD4 CHARACTER (50)
  , VTSPOSTCODE CHARACTER (8)
  , VTSORGNAME CHARACTER (60)
  , APPADD1 CHARACTER (50)
  , APPADD2 CHARACTER (50)
  , APPADD3 CHARACTER (50)
  , APPADD4 CHARACTER (50)
  , APPADDPOSTCODE CHARACTER (8)
  , APPORGNAME CHARACTER (60)
  , FIRSTNAMENT CHARACTER (30)
  , FIRSTNAMESM CHARACTER (30)
  , FIRSTNAMEVITS CHARACTER (30)
  , PERDETHOMEADRLINE1 CHARACTER (50)
  , PERDETHOMEADRLINE2 CHARACTER (50)
  , PERDETHOMEADRLINE3 CHARACTER (50)
  , PERDETHOMEADRLINE4 CHARACTER (50)
  , PERDETHOMEPOSTCODE CHARACTER (8)
  , LASTNAMENT CHARACTER (30)
  , LASTNAMESM CHARACTER (30)
  , LASTNAMEVITS CHARACTER (30)
  , TITLENT CHARACTER (12)
  , TITLESM CHARACTER (12)
  , PRGROUPSTATUS CHARACTER (2)
  , TESTINGMAX DATE
  , USERID CHARACTER (8)
  , VTSTOAELNKTRADENME CHARACTER (60)
  , CRSSUCCESSCRITERIA CHARACTER (1)
  , EVENTREPORTLOC CHARACTER (50)
  , APPCHLSTREASREJ01 CHARACTER (50)
  , APPCHLSTREASREJ02 CHARACTER (50)
  , APPCHLSTREASREJ03 CHARACTER (50)
  , APPCHLSTREASREJ04 CHARACTER (50)
  , APPCHLSTREASREJ05 CHARACTER (50)
  , APPCHLSTREASREJ06 CHARACTER (50)
  , APPCHLSTREASREJ07 CHARACTER (50)
  , APPCHLSTREASREJ08 CHARACTER (50)
  , APPCHLSTREASREJ09 CHARACTER (50)
  , APPCHLSTREASREJ10 CHARACTER (50)
  , CRSPREREQUISITE01 CHARACTER (100)
  , CRSPREREQUISITE02 CHARACTER (100)
  , CRSPREREQUISITE03 CHARACTER (100)
  , CRSPREREQUISITE04 CHARACTER (100)
  , CRSPREREQUISITE05 CHARACTER (100)
  , CRSPREREQUISITE06 CHARACTER (100)
  , CRSPREREQUISITE07 CHARACTER (100)
  , CRSPREREQUISITE08 CHARACTER (100)
  , CRSPREREQUISITE09 CHARACTER (100)
  , CRSPREREQUISITE10 CHARACTER (100)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MAILMERGE PRIMARY KEY (
       APPLICATIONNUMBER
     , MAILMERGECNTR
    )
);

CREATE TABLE MEMBEROFPUBLIC
(   MEMBEROFPBLCID INTEGER
  , MEMBEROFPBLCAKA CHARACTER (30)
  , MEMBEROFPBLCAKAC CHARACTER (30)
  , MEMBEROFPBLCADD1 CHARACTER (50)
  , MEMBEROFPBLCADD1C CHARACTER (50)
  , MEMBEROFPBLCADD2 CHARACTER (50)
  , MEMBEROFPBLCADD3 CHARACTER (50)
  , MEMBEROFPBLCADD4 CHARACTER (50)
  , MEMBEROFPBLCADD4C CHARACTER (50)
  , MEMBEROFPBLCDAYPH CHARACTER (24)
  , MEMBEROFPBLCEMAIL TEXT
  , MEMBEROFPBLCEVEPH CHARACTER (24)
  , MEMBEROFPBLCFSTNM CHARACTER (30)
  , MEMBEROFPBLCFSTNC CHARACTER (30)
  , MEMBEROFPBLCLSTNM CHARACTER (30)
  , MEMBEROFPBLCLSTNC CHARACTER (30)
  , MEMBEROFPBLCMDNM CHARACTER (30)
  , MEMBEROFPBLCMOBPH CHARACTER (24)
  , MEMBEROFPBLCPSTCD CHARACTER (8)
  , MEMBEROFPBLCTITLE CHARACTER (12)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MEMBEROFPUBLIC PRIMARY KEY (
       MEMBEROFPBLCID
    )
);
CREATE TABLE MEP
(   MEPID INTEGER
  , AREAID INTEGER
  , MEPNAME CHARACTER (20)
  , MEPNAMEC CHARACTER (20)
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MEPID PRIMARY KEY (
       MEPID
    )
);
CREATE TABLE MESSAGEDETAIL
(   MESSAGEID INTEGER
  , MESSAGEPERSONID INTEGER
  , MSGTEXTID INTEGER
  , MESSAGECONTENT TEXT
  , MESSAGEEXPIRYDATE DATE
  , MESSAGERELDATETIME TIMESTAMP(3)
  , MESSAGETYPE CHARACTER (1)
  , ACKNOWLEDGEPERIOD SMALLINT
  , SPECIALNOTETOVIDT DATE
  , SPECIALNOTETOWRDDT DATE
  , SPECIALNOTICENO CHARACTER (10)
  , FUNCSHORTCODE CHARACTER (5)
  , MSGSELECTIONLEVEL CHARACTER (2)
  , TRANSSTART TIMESTAMP(3)
  , TRANSEND TIMESTAMP(3)
  , RECIPIENTCOUNT INTEGER
  , MESSAGEPURGEDATE DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MESSAGEDETAIL PRIMARY KEY (
       MESSAGEID
    )
);
CREATE TABLE METASSESSCHOICE
(   METQUESTIONID INTEGER
  , METMCTEXT CHARACTER (10)
  , METMCACTIVEFLAG CHARACTER (1)
  , METMCSEQNUM SMALLINT
  , METMCSCORE DECIMAL (5,2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MACQUESTIONID PRIMARY KEY (
       METQUESTIONID
     , METMCTEXT
    )
);
CREATE TABLE METASSESSCHOICEDR
(   METQUESTIONID INTEGER
  , METMCTEXT CHARACTER (10)
  , METMCACTIVEFLAG CHARACTER (1)
  , METMCSEQNUM SMALLINT
  , METMCSCORE DECIMAL (5,2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MACDQUESTIONID PRIMARY KEY (
       METQUESTIONID
     , METMCTEXT
    )
);
CREATE TABLE METASSESSMENT
(   LOCATIONID INTEGER
  , METASSESSCNTR INTEGER
  , ORGID INTEGER
  , ORGANISATNLOCID INTEGER
  , METASSESSTYPE CHARACTER (1)
  , METASSESSDATE DATE
  , METASSESSPERSONID INTEGER
  , METINTVIEWEENAME CHARACTER (50)
  , METVTSPERSONID INTEGER
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , METASSESSSTATUS CHARACTER (1)
  , METASSESSSTATDATE TIMESTAMP(3)
  , METASSESSOVERALL CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MALOCATIONID PRIMARY KEY (
       LOCATIONID
     , METASSESSCNTR
    )
);
CREATE TABLE METASSESSMENTRESP
(   LOCATIONID INTEGER
  , METASSESSCNTR INTEGER
  , METQUESTIONID INTEGER
  , METRESPONSETEXT TEXT
  , METRESPPERSONID INTEGER
  , METRESPONSEOBS TEXT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MARLOCATIONID PRIMARY KEY (
       LOCATIONID
     , METASSESSCNTR
     , METQUESTIONID
    )
);
CREATE TABLE METASSESSMENTSCORE
(   LOCATIONID INTEGER
  , METASSESSCNTR INTEGER
  , METASSESSSCORECNTR INTEGER
  , METSECTIONTYPE CHARACTER (1)
  , METSECTIONID INTEGER
  , METSCOREPERSONID INTEGER
  , METASSESSTYPE CHARACTER (1)
  , METASSESSSCOREDATE TIMESTAMP(3)
  , METSCORELEVEL CHARACTER (1)
  , METSCORERAW DECIMAL (9,2)
  , METSCOREWEIGHTED DECIMAL (9,2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MASLOCATIONID PRIMARY KEY (
       LOCATIONID
     , METASSESSCNTR
     , METASSESSSCORECNTR
    )
);
CREATE TABLE METASSESSQUESTDR
(   METQUESTIONID INTEGER
  , METASSESSTYPE CHARACTER (1)
  , METSECTIONID INTEGER
  , METQUESTIONNUM SMALLINT
  , METQUESACTIVEFLAG CHARACTER (1)
  , METQUESTIONTEXT CHARACTER (200)
  , METQUESTIONTYPE CHARACTER (1)
  , METQUESOBSPOSSIBLE CHARACTER (1)
  , METQUESTIONROLEID INTEGER
  , METROLEABBR CHARACTER (5)
  , METQUESTIONWEIGHT DECIMAL (5,2)
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , METQUESSECTNUM SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MAQDQUESTID PRIMARY KEY (
       METQUESTIONID
    )
);
CREATE TABLE METASSESSQUESTION
(   METQUESTIONID INTEGER
  , METASSESSTYPE CHARACTER (1)
  , METSECTIONID INTEGER
  , METQUESTIONNUM SMALLINT
  , METQUESACTIVEFLAG CHARACTER (1)
  , METQUESTIONTEXT CHARACTER (200)
  , METQUESTIONTYPE CHARACTER (1)
  , METQUESOBSPOSSIBLE CHARACTER (1)
  , METQUESTIONROLEID INTEGER
  , METROLEABBR CHARACTER (5)
  , METQUESTIONWEIGHT DECIMAL (5,2)
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , METQUESSECTNUM SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MAQQUESTIONID PRIMARY KEY (
       METQUESTIONID
    )
);
CREATE TABLE METASSESSSECTION
(   METSECTIONID INTEGER
  , METASSESSTYPE CHARACTER (1)
  , METSECTACTIVEFLAG CHARACTER (1)
  , METSECTIONNAME CHARACTER (50)
  , METSECTIONTYPE CHARACTER (1)
  , METSECTIONWEIGHT DECIMAL (5,2)
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MASSECTIONID PRIMARY KEY (
       METSECTIONID
    )
);
CREATE TABLE METASSESSSECTIONDR
(   METSECTIONID INTEGER
  , METASSESSTYPE CHARACTER (1)
  , METSECTACTIVEFLAG CHARACTER (1)
  , METSECTIONNAME CHARACTER (50)
  , METSECTIONTYPE CHARACTER (1)
  , METSECTIONWEIGHT DECIMAL (5,2)
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MASDSECTIONID PRIMARY KEY (
       METSECTIONID
    )
);
CREATE TABLE METDEFAULTTASK
(   METSEGID INTEGER
  , METSEGTASKID INTEGER
  , METTASKTYPE INTEGER
  , METOFFSET SMALLINT
  , METTASKDESCSUFFIX CHARACTER (30)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MDTSEGID PRIMARY KEY (
       METSEGID
     , METSEGTASKID
    )
);
CREATE TABLE METDEFAULTTASKDR
(   METSEGID INTEGER
  , METSEGTASKID INTEGER
  , METTASKTYPE INTEGER
  , METOFFSET SMALLINT
  , METTASKDESCSUFFIX CHARACTER (30)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MDTDSEGTASKID PRIMARY KEY (
       METSEGID
     , METSEGTASKID
    )
);
CREATE TABLE METPARAMETER
(   METPARMID INTEGER
  , METSIGVARTHRUPADJ DECIMAL (5,2)
  , METSIGVARFAILRATE DECIMAL (5,2)
  , METSIGVARTESTDUR DECIMAL (5,2)
  , METSIGVARVEHAGE DECIMAL (5,2)
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , METLIMPLANDURATION SMALLINT
  , METLIMTHRUPADJ3M DECIMAL (5,2)
  , UPDATINGSTPERSONID INTEGER
  , UPDATINGSTDATETIME TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MPMETPARMID PRIMARY KEY (
       METPARMID
    )
);
CREATE TABLE METPARAMETERDR
(   METPARMID INTEGER
  , METSIGVARTHRUPADJ DECIMAL (5,2)
  , METSIGVARFAILRATE DECIMAL (5,2)
  , METSIGVARTESTDUR DECIMAL (5,2)
  , METSIGVARVEHAGE DECIMAL (5,2)
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , METLIMPLANDURATION SMALLINT
  , METLIMTHRUPADJ3M DECIMAL (5,2)
  , UPDATINGSTPERSONID INTEGER
  , UPDATINGSTDATETIME TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MPDMETPARMID PRIMARY KEY (
       METPARMID
    )
);
CREATE TABLE METRICSDETAIL
(   SAMPLENUMBER INTEGER
  , SAMPLEDATE DATE
  , METRICSLEVEL CHARACTER (1)
  , ORGID INTEGER
  , ORGANISATNLOCID INTEGER
  , LOCATIONID INTEGER
  , PERSONID INTEGER
  , AEWITHMULTIVTS CHARACTER (1)
  , VTSWITHMULTINT CHARACTER (1)
  , SAMPLESTARTDATE DATE
  , SAMPLEENDDATE DATE
  , NTINSAMPLECOUNT SMALLINT
  , INITIALTESTCOUNT INTEGER
  , FULLRETESTCOUNT INTEGER
  , PARTIALRETESTCOUNT INTEGER
  , DUPLICATERATE DECIMAL (5,2)
  , REPLACEMENTRATE DECIMAL (5,2)
  , INITTESTFAILRATE DECIMAL (5,2)
  , FULLRETESTFAILRATE DECIMAL (5,2)
  , PARTRETESTFAILRATE DECIMAL (5,2)
  , FALLBACKRATE DECIMAL (5,2)
  , MANUALENTRY DECIMAL (5,2)
  , SPARECARDUSGRT DECIMAL (5,2)
  , AVVINVRMMISMATCH DECIMAL (3,2)
  , QCSCORE DECIMAL (3,2)
  , AVRGETHROUGHPUT DECIMAL (5,2)
  , AVRGERETDURATION SMALLINT
  , AEQCSCORE DECIMAL (3,2)
  , TESTCLASSGROUPID1 CHARACTER (1)
  , AVRGETSTDURATION1 SMALLINT
  , TESTCLASSGROUPID2 CHARACTER (1)
  , AVRGETSTDURATION2 SMALLINT
  , AVRGETHRUPUTADJUST DECIMAL (5,2)
  , AVRGEVEHICLEAGE DECIMAL (5,2)
  , AVRGETHRUPUTADJ3M DECIMAL (5,2)
  , INITTESTFAILRATE3M DECIMAL (5,2)
  , AVRGEVEHICLEAGE3M DECIMAL (5,2)
  , AVRGETSTDUR3M1 SMALLINT
  , AVRGETSTDUR3M2 SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_METRICSDETAIL PRIMARY KEY (
       SAMPLENUMBER
    )
);
CREATE TABLE METRICSDETMESSAGE
(   SAMPLENUMBER INTEGER
  , TESTREGMSGCODE INTEGER
  , ERRORMESSAGECOUNT SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_METRICSDETMSG PRIMARY KEY (
       SAMPLENUMBER
     , TESTREGMSGCODE
    )
);
CREATE TABLE METRICSDETSECTION
(   SAMPLENUMBER INTEGER
  , TSTITMSETSECID SMALLINT
  , DEFECTRATE DECIMAL (5,2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_METRICSDETSECTN PRIMARY KEY (
       SAMPLENUMBER
     , TSTITMSETSECID
    )
);
CREATE TABLE METRICSSCHEME
(   SCHEMESAMPLENUMBER INTEGER
  , SCHEMEYEARMONTH INTEGER
  , METRICSLEVEL CHARACTER (1)
  , INITIALTESTCOUNT INTEGER
  , FULLRETESTCOUNT INTEGER
  , PARTIALRETESTCOUNT INTEGER
  , AVRGETHROUGHPUT DECIMAL (5,2)
  , AVRGETHROUGHPUTSD DECIMAL (5,2)
  , AVRGERETDURATION SMALLINT
  , AVRGERETDURATIONSD DECIMAL (5,2)
  , INITTESTFAILRATE DECIMAL (5,2)
  , INITTESTFAILRATESD DECIMAL (5,2)
  , FULLRETESTFAILRATE DECIMAL (5,2)
  , FULLRETESTFAILRTSD DECIMAL (5,2)
  , PARTRETESTFAILRATE DECIMAL (5,2)
  , PARTRETESTFAILRTSD DECIMAL (5,2)
  , AVVINVRMMISMATCH DECIMAL (3,2)
  , AVVINVRMMISMATCHSD DECIMAL (3,2)
  , QCSCORE DECIMAL (3,2)
  , QCSCORESD DECIMAL (3,2)
  , FALLBACKRATE DECIMAL (5,2)
  , FALLBACKRATESD DECIMAL (5,2)
  , MANUALENTRY DECIMAL (5,2)
  , MANUALENTRYSD DECIMAL (5,2)
  , SPARECARDUSGRT DECIMAL (5,2)
  , SPARECARDUSGRTSD DECIMAL (5,2)
  , DUPLICATERATE DECIMAL (5,2)
  , DUPLICATERATESD DECIMAL (5,2)
  , REPLACEMENTRATE DECIMAL (5,2)
  , REPLACEMENTRATESD DECIMAL (5,2)
  , TESTCLASSGROUPID1 CHARACTER (1)
  , AVRGETSTDURATION1 SMALLINT
  , AVRGTSTDURATIONSD1 DECIMAL (7,2)
  , TESTCLASSGROUPID2 CHARACTER (1)
  , AVRGETSTDURATION2 SMALLINT
  , AVRGTSTDURATIONSD2 DECIMAL (7,2)
  , AVRGETHRUPUTADJUST DECIMAL (5,2)
  , AVRGETHRUPUTADJSD DECIMAL (5,2)
  , AVRGEVEHICLEAGE DECIMAL (5,2)
  , AVRGEVEHICLEAGESD DECIMAL (5,2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_METRICSSCHEME PRIMARY KEY (
       SCHEMESAMPLENUMBER
    )
);
CREATE TABLE METRICSSCHMESSAGE
(   SCHEMESAMPLENUMBER INTEGER
  , TESTREGMSGCODE INTEGER
  , ERRORMESSAGECOUNT SMALLINT
  , ERRORMESSCOUNTSD DECIMAL (7,2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_METRICSSCHMSG PRIMARY KEY (
       SCHEMESAMPLENUMBER
     , TESTREGMSGCODE
    )
);
CREATE TABLE METRICSSCHSECTION
(   SCHEMESAMPLENUMBER INTEGER
  , TSTITMSETSECID SMALLINT
  , DEFECTRATE DECIMAL (5,2)
  , DEFECTRATESD DECIMAL (5,2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_METRICSSCHSECTN PRIMARY KEY (
       SCHEMESAMPLENUMBER
     , TSTITMSETSECID
    )
);
CREATE TABLE METRICSVTSBASELINE
(   ORGANISATNLOCID INTEGER
  , SAMPLEDATE DATE
  , SAMPLENUMBER INTEGER
  , CREATIONDATETIME TIMESTAMP(3)
  , METBASELINEREQDATE DATE
  , METBASELINEREQREAS CHARACTER (50)
  , AVRGETHRUPUTADJ3M DECIMAL (5,2)
  , INITTESTFAILRATE3M DECIMAL (5,2)
  , AVRGEVEHICLEAGE3M DECIMAL (5,2)
  , AVRGETSTDUR3M1 SMALLINT
  , AVRGETSTDUR3M2 SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MVBORGLOCID PRIMARY KEY (
       ORGANISATNLOCID
     , SAMPLEDATE
    )
);
CREATE TABLE METRISKSCORE
(   ORGANISATNLOCID INTEGER
  , METRISKFROMDATE TIMESTAMP(3)
  , LOCATIONID INTEGER
  , METRISKSCOREDATE TIMESTAMP(3)
  , METRISKSCORE DECIMAL (9,2)
  , METRISKPERSONID INTEGER
  , METSEGRISKID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MRSORGLOCID PRIMARY KEY (
       ORGANISATNLOCID
     , METRISKFROMDATE
    )
);
CREATE TABLE METSEGMENT
(   METSEGID INTEGER
  , METSEGMENT CHARACTER (10)
  , METRISKSCOREUPRLIM DECIMAL (9,2)
  , METSEGDESCRIPTION CHARACTER (50)
  , METSEGACTIVE CHARACTER (1)
  , METSEGTYPE CHARACTER (1)
  , METSEGMONITOR CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MSMETSEGID PRIMARY KEY (
       METSEGID
    )
);
CREATE TABLE METSEGMENTDR
(   METSEGID INTEGER
  , METSEGMENT CHARACTER (10)
  , METRISKSCOREUPRLIM DECIMAL (9,2)
  , METSEGDESCRIPTION CHARACTER (50)
  , METSEGACTIVE CHARACTER (1)
  , METSEGTYPE CHARACTER (1)
  , METSEGMONITOR CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MSDMETSEGID PRIMARY KEY (
       METSEGID
    )
);
CREATE TABLE METSOURCE
(   METASSESSTYPE CHARACTER (1)
  , METASSESSENTRY CHARACTER (1)
  , METASSESSTYPETEXT CHARACTER (50)
  , METLASTSIGCHANGE TIMESTAMP(3)
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , METPLANENABLED CHARACTER (1)
  , METOVERALLENABLED CHARACTER (1)
  , METASSTYPEWEIGHT DECIMAL (4,2)
  , METBASELINESTORE CHARACTER (1)
  , METASSESSINHERIT CHARACTER (1)
  , METASSESSABBR CHARACTER (10)
  , METRESPPERSENABLED CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MSASSESSTYPE PRIMARY KEY (
       METASSESSTYPE
    )
);
CREATE TABLE METSOURCEDR
(   METASSESSTYPE CHARACTER (1)
  , METASSESSENTRY CHARACTER (1)
  , METASSESSTYPETEXT CHARACTER (50)
  , METLASTSIGCHANGE TIMESTAMP(3)
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , METPLANENABLED CHARACTER (1)
  , METOVERALLENABLED CHARACTER (1)
  , METASSTYPEWEIGHT DECIMAL (4,2)
  , METBASELINESTORE CHARACTER (1)
  , METASSESSINHERIT CHARACTER (1)
  , METASSESSABBR CHARACTER (10)
  , METRESPPERSENABLED CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MSDASSESSTYPE PRIMARY KEY (
       METASSESSTYPE
    )
);
CREATE TABLE METSOURCESECTION
(   METASSESSTYPE CHARACTER (1)
  , METSECTIONTYPE CHARACTER (1)
  , METSECTIONTYPETEXT CHARACTER (50)
  , METRISKRANGE SMALLINT
  , METSCORABLESECTION CHARACTER (1)
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , METSECTIONDEFSCORE DECIMAL (9,2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MSSASSESSTYPE PRIMARY KEY (
       METASSESSTYPE
     , METSECTIONTYPE
    )
);
CREATE TABLE METSOURCESECTIONDR
(   METASSESSTYPE CHARACTER (1)
  , METSECTIONTYPE CHARACTER (1)
  , METSECTIONTYPETEXT CHARACTER (50)
  , METRISKRANGE SMALLINT
  , METSCORABLESECTION CHARACTER (1)
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , METSECTIONDEFSCORE DECIMAL (9,2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MSSDASSESSTYPE PRIMARY KEY (
       METASSESSTYPE
     , METSECTIONTYPE
    )
);
CREATE TABLE METTASKTYPE
(   METTASKTYPE INTEGER
  , METTASKDESC CHARACTER (20)
  , METTASKABBR CHARACTER (5)
  , METTASKACTIVE CHARACTER (1)
  , METTASKGROUP CHARACTER (1)
  , METTASKENTRY CHARACTER (1)
  , METTASKUSAGE CHARACTER (1)
  , METTASKSYSUSAGE CHARACTER (1)
  , METTASKCOMPLETION CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MTTTASKTYPE PRIMARY KEY (
       METTASKTYPE
    )
);
CREATE TABLE METTASKTYPEDR
(   METTASKTYPE INTEGER
  , METTASKDESC CHARACTER (20)
  , METTASKABBR CHARACTER (5)
  , METTASKACTIVE CHARACTER (1)
  , METTASKGROUP CHARACTER (1)
  , METTASKENTRY CHARACTER (1)
  , METTASKUSAGE CHARACTER (1)
  , METTASKSYSUSAGE CHARACTER (1)
  , METTASKCOMPLETION CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MTTDTASKTYPE PRIMARY KEY (
       METTASKTYPE
    )
);
CREATE TABLE METTHROUGHPUTRANGE
(   METTHRUPUTRANGEID INTEGER
  , METTHRUUPRLIM DECIMAL (5,2)
  , METTHRURISKWGT DECIMAL (4,2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MTRTHRURANGEID PRIMARY KEY (
       METTHRUPUTRANGEID
    )
);
CREATE TABLE METTHRUPUTRANGEDR
(   METTHRUPUTRANGEID INTEGER
  , METTHRUUPRLIM DECIMAL (5,2)
  , METTHRURISKWGT DECIMAL (4,2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MTRDTHRURANGEID PRIMARY KEY (
       METTHRUPUTRANGEID
    )
);
CREATE TABLE METVTSTASK
(   ORGANISATNLOCID INTEGER
  , ORGLOCTASKID INTEGER
  , METTASKINITTYPE INTEGER
  , METTASKDESCSUFFIX CHARACTER (30)
  , METTASKINITYYYYMM INTEGER
  , METTASKINITDATTIM TIMESTAMP(3)
  , METTASKINITBYPERS INTEGER
  , METTASKPLANPERSID INTEGER
  , METTASKPLANBYPERS INTEGER
  , METTASKPLANTYPE INTEGER
  , METTASKPLANYYYYMM INTEGER
  , METTASKREASON CHARACTER (25)
  , METTASKTERMSTATUS CHARACTER (1)
  , METTASKTERMTYPE INTEGER
  , METTASKTERMPERSID INTEGER
  , METTASKTERMBYPERS INTEGER
  , METTASKTERMDATTIM TIMESTAMP(3)
  , METTASKTERMFUNC CHARACTER (5)
  , METTASKREVWOUTCOME CHARACTER (2)
  , METTASKSUSDATTIM TIMESTAMP(3)
  , METTASKSUSREASON CHARACTER (1)
  , METTASKUNSUSDATTIM TIMESTAMP(3)
  , METTASKUNSUSBYPERS INTEGER
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MVTORGLOCID PRIMARY KEY (
       ORGANISATNLOCID
     , ORGLOCTASKID
    )
);
CREATE TABLE METVTSTASKCOMMENT
(   ORGANISATNLOCID INTEGER
  , ORGLOCTASKID INTEGER
  , METTASKCOMMENTID INTEGER
  , METTASKCOMMENT TEXT
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MVTCORGLOCID PRIMARY KEY (
       ORGANISATNLOCID
     , ORGLOCTASKID
     , METTASKCOMMENTID
    )
);
CREATE TABLE METVTSTOAELINK
(   ORGANISATNLOCID INTEGER
  , LOCATIONID INTEGER
  , ORGID INTEGER
  , VTSTOAEINTELFROMDT DATE
  , VTSTOAEINTELTODT DATE
  , METBASELINEREQDATE DATE
  , METBASELINEREQREAS CHARACTER (50)
  , METPLANLOCALDATE DATE
  , METPLANSEGID INTEGER
  , METPLANDATE DATE
  , METREPLANDATE DATE
  , METPLANSTATUS CHARACTER (1)
  , METINHERITLINKID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MVALORGLOCID PRIMARY KEY (
       ORGANISATNLOCID
    )
);
CREATE TABLE MONITOREDITEMTYPE
(   MONITEMID CHARACTER (3)
  , MONITEMCODE CHARACTER (3)
  , MONITEMTYPUSGCOUNT INTEGER
  , MONITEMTYPEDES CHARACTER (20)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MONITOREDITEMTYPE PRIMARY KEY (
       MONITEMID
    )
);
CREATE TABLE MOTTGVERSION
(   MOTTGVERSIONID INTEGER
  , MOTTGVERSNAME CHARACTER (10)
  , MOTTGVERSFRDT DATE
  , MOTTGVERSTODT DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_MOTTGVERSION PRIMARY KEY (
       MOTTGVERSIONID
    )
);
CREATE TABLE ORDERFRCAT
(   ORDERNUMBER INTEGER
  , ORDERDATE TIMESTAMP(3)
  , ORGID INTEGER
  , LOCATIONID INTEGER
  , ORDERCURRTYPE CHARACTER (1)
  , DELIVERYADDRLINE1 CHARACTER (50)
  , DELIVERYADDRLINE2 CHARACTER (50)
  , DELIVERYADDRLINE3 CHARACTER (50)
  , DELIVERYADDRLINE4 CHARACTER (50)
  , DELIVERYPOSTCODE CHARACTER (8)
  , RAISINGPERSONID INTEGER
  , ORDERTYPE CHARACTER (1)
  , ORDERCANCELDATE DATE
  , ORDERFULLFILLEDDT DATE
  , RETURNEDORDERNUM INTEGER
  , UPDATINGPERSONID INTEGER
  , DELIVERYADDRLINE1C CHARACTER (50)
  , DELIVERYADDRLINE4C CHARACTER (50)
  , ORDERTOTALEXVAT DECIMAL (9,2)
  , ORDERVAT DECIMAL (9,2)
  , ORIGINALORDERNUM INTEGER
  , ORDERTEXT CHARACTER (100)
  , RELEASEDATE DATE
  , ASSOCPAYFAILED CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_ORDERFRCAT PRIMARY KEY (
       ORDERNUMBER
    )
);
CREATE TABLE ORDERITEM
(   ORDERNUMBER INTEGER
  , CATALOGUEITMID INTEGER
  , ORDERITEMQNTY DECIMAL (10,0)
  , ORDERITEMUNITAMT DECIMAL (9,2)
  , VATRATEID INTEGER
  , ORDERITEMRTRNRSN CHARACTER (1)
  , DELITEMDESPDATE DATE
  , DELITEMDESPPERSID INTEGER
  , UPDATINGPERSONID INTEGER
  , ORDERITEMDATA CHARACTER (15)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_ORDERITEM PRIMARY KEY (
       ORDERNUMBER
     , CATALOGUEITMID
    )
);
CREATE TABLE ORGACCENTRY
(   ORGACCOUNTID INTEGER
  , ORGACCENTRYID INTEGER
  , ORGACCENTRYDATE DATE
  , ORGACCENTRYAMOUNT DECIMAL (9,2)
  , ORGACCENTRYCURRTYP CHARACTER (1)
  , ORGACCENTRYTYPE CHARACTER (1)
  , ORGACCENTRYDES CHARACTER (40)
  , ORGACCENTRYCTGRY CHARACTER (1)
  , ORGACCENTRYCLRDDT DATE
  , ORGACCENTRYFAILDT DATE
  , ORGACCENTRYTOVIDT DATE
  , ORDERNUMBER INTEGER
  , TRANSFERID INTEGER
  , CERTIFICATENUMBER CHARACTER (10)
  , COURSECODE CHARACTER (10)
  , EVENTCODE INTEGER
  , EVENTENROLHISTCNTR SMALLINT
  , APPLICATIONNUMBER INTEGER
  , MANUALADJSTREASON CHARACTER (100)
  , PAYMENTCODE CHARACTER (2)
  , PAYMENTRESULT CHARACTER (1)
  , REFUNDPAYEE CHARACTER (50)
  , REFUNDADDRESSLINE1 CHARACTER (50)
  , REFUNDADDRESSLINE2 CHARACTER (50)
  , REFUNDADDRESSLINE3 CHARACTER (50)
  , REFUNDADDRESSLINE4 CHARACTER (50)
  , REFUNDPOSTCODE CHARACTER (8)
  , REFUNDREASON CHARACTER (50)
  , REFUNDREQUIREDDATE DATE
  , REFUNDAUTHPERSID INTEGER
  , REFUNDCHEQUENUMBER CHARACTER (10)
  , REFUNDCANCLRES CHARACTER (100)
  , REFUNDCANCLDATE DATE
  , REFUNDEXTRACTED TIMESTAMP(3)
  , RAISINGPERSONID INTEGER
  , UPDATINGPERSONID INTEGER
  , FAILUREREF CHARACTER (24)
  , EXTERNALREF CHARACTER (20)
  , PAYMENTGROUPID INTEGER
  , ORGANISATNLOCID INTEGER
  , PREVPAYINITID INTEGER
  , PAYINITTIME TIME
  , ORGACCPREVBALAMT DECIMAL (9,2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_ORGACCENTRY PRIMARY KEY (
       ORGACCENTRYID
    )
);
CREATE TABLE ORGACCOUNT
(   ORGID INTEGER
  , ORGACCOUNTID INTEGER
  , ORGACCCURRTYPE CHARACTER (1)
  , ORGACCRNNGBALAMT DECIMAL (9,2)
  , ORGACCMINAEBALAMT DECIMAL (9,2)
  , ORGACCSTMNTDATE DATE
  , ORGACCSTMNTPERIOD CHARACTER (2)
  , ORGACCSTMNTPRDVAL SMALLINT
  , UPDATINGPERSONID INTEGER
  , COSTCENTREID INTEGER
  , ORGACCSTMNTNXTDATE DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_ORGACCOUNT PRIMARY KEY (
       ORGACCOUNTID
    )
);
CREATE TABLE ORGANISATION
(   ORGID INTEGER
  , ORGADDRESSLINE1 CHARACTER (50)
  , ORGADDRESSLINE1C CHARACTER (50)
  , ORGADDRESSLINE2 CHARACTER (50)
  , ORGADDRESSLINE3 CHARACTER (50)
  , ORGADDRESSLINE4 CHARACTER (50)
  , ORGADDRESSLINE4C CHARACTER (50)
  , ORGCONTACTNAME CHARACTER (60)
  , ORGDATADISCISRIND CHARACTER (1)
  , ORGNAME CHARACTER (60)
  , ORGPOSTCODE CHARACTER (8)
  , ORGREGDOFFADDRLN1 CHARACTER (50)
  , ORGREGDOFFADDRLN1C CHARACTER (50)
  , ORGREGDOFFADDRLN2 CHARACTER (50)
  , ORGREGDOFFADDRLN3 CHARACTER (50)
  , ORGREGDOFFADDRLN4 CHARACTER (50)
  , ORGREGDOFFADDRLN4C CHARACTER (50)
  , ORGREGDOFFEMAIL TEXT
  , ORGREGDOFFFAXNO CHARACTER (24)
  , ORGREGDOFFPOSTCD CHARACTER (8)
  , ORGREGDOFFTELNO CHARACTER (24)
  , ORGREGISTRATIONNO CHARACTER (15)
  , ORGSNENCLOSURES CHARACTER (1)
  , ORGSPCLNOTICDELMED CHARACTER (2)
  , ORGTRADINGNAME CHARACTER (60)
  , ORGTRADINGNAMEC CHARACTER (60)
  , ORGTYPE CHARACTER (1)
  , ORGEMAIL TEXT
  , ORGFAXNUMBER CHARACTER (24)
  , ORGTELNUMBER CHARACTER (24)
  , ISORGAE CHARACTER (1)
  , AEACCOUNTTYPE CHARACTER (1)
  , AECONDAPPRFROMDT DATE
  , AECONDAPPEXPIRYDT DATE
  , AELASTCONFIRMEDDT DATE
  , AELASTUPDPERSONID INTEGER
  , AENUMBER CHARACTER (10)
  , AERELATEDAES CHARACTER (200)
  , AESTATECSWRKAPPEAL CHARACTER (10)
  , AEWITHDRAWALIMPDT DATE
  , AESTATUSFROMDATE DATE
  , AESTATUSKEY CHARACTER (2)
  , AESTATUPDPERSONID INTEGER
  , AESTATHISTCTR SMALLINT
  , ORGNAMEC CHARACTER (60)
  , COMPLCOUNTUPHELD INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_ORGANISATION PRIMARY KEY (
       ORGID
    )
);
CREATE TABLE ORGLOCATIONLINK
(   ORGANISATNLOCID INTEGER
  , LOCATIONID INTEGER
  , ORGID INTEGER
  , ORGACCOUNTID INTEGER
  , ORGANISATNLOCFRDT DATE
  , ORGANISATNLOCTODT DATE
  , LINKUPDATPERSONID INTEGER
  , CONCURRENTTSTNGLMT SMALLINT
  , DEVICEBLOCK CHARACTER (1)
  , LASTCONFIRMEDDATE DATE
  , STARTERPACKREQSTDT DATE
  , SURVEILLANCEIND CHARACTER (1)
  , SURVEILLANCEPERSID INTEGER
  , SURVRECIPTPERSID INTEGER
  , ISORGLOCVTSTOAELNK CHARACTER (1)
  , VTSAEAIPEXPDT DATE
  , VTSAECONDACTVEXPDT DATE
  , VTSAEWITHDRWLIMPDT DATE
  , VTSTOAELNKCERTUSE CHARACTER (1)
  , VTSTOAELNKEMAIL TEXT
  , VTSTOAELNKFINCSTOP CHARACTER (1)
  , VTSTOAELNKMAXPADS SMALLINT
  , VTSTOAELNKPDISSDT DATE
  , VTSTOAELNKTRADENME CHARACTER (60)
  , VTSTOAELNKTRADENMC CHARACTER (60)
  , VTSTOAELNKVT26LTDT DATE
  , VTSAEAPPEALPRDFRDT DATE
  , VTSTOAELNKSTSKEY CHARACTER (2)
  , VTSTOAELNKSTSFRDT DATE
  , VTSTOAELNKUPPRSNID INTEGER
  , VTSTOAEHISTCNTR SMALLINT
  , MONDEMANDOPENTIME TIME
  , MONDEMANDCLOSETIME TIME
  , TUEDEMANDOPENTIME TIME
  , TUEDEMANDCLOSETIME TIME
  , WEDDEMANDOPENTIME TIME
  , WEDDEMANDCLOSETIME TIME
  , THUDEMANDOPENTIME TIME
  , THUDEMANDCLOSETIME TIME
  , FRIDEMANDOPENTIME TIME
  , FRIDEMANDCLOSETIME TIME
  , SATDEMANDOPENTIME TIME
  , SATDEMANDCLOSETIME TIME
  , SUNDEMANDOPENTIME TIME
  , SUNDEMANDCLOSETIME TIME
  , MONAPPOINTOPENTIME TIME
  , MONAPPOINTCLOSETIM TIME
  , TUEAPPOINTOPENTIME TIME
  , TUEAPPOINTCLOSETIM TIME
  , WEDAPPOINTOPENTIME TIME
  , WEDAPPOINTCLOSETIM TIME
  , THUAPPOINTOPENTIME TIME
  , THUAPPOINTCLOSETIM TIME
  , FRIAPPOINTOPENTIME TIME
  , FRIAPPOINTCLOSETIM TIME
  , SATAPPOINTOPENTIME TIME
  , SATAPPOINTCLOSETIM TIME
  , SUNAPPOINTOPENTIME TIME
  , SUNAPPOINTCLOSETIM TIME
  , VTSTOAELNKVT26REQ CHARACTER (1)
  , LOCORGACCOUNTID INTEGER
  , COMPLCOUNTINDIRECT INTEGER
  , COMPLCOUNTDIRECT INTEGER
  , VTSTOAEDIGESTDTTM TIMESTAMP(3)
  , VTSTOAETCFLAGS CHARACTER (8)
  , VTSTOAETSTERDIGEST TEXT
  , ONEPERSTESTAPPRVD CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_ORGLOCATIONLINK PRIMARY KEY (
       ORGANISATNLOCID
    )
);
CREATE TABLE PADOFCERT
(   PADFIRSTCERTNO CHARACTER (10)
  , ORDERNUMBER INTEGER
  , CATALOGUEITMID INTEGER
  , UPDATINGPERSONID INTEGER
  , LOCATIONID INTEGER
  , CARRIERREF CHARACTER (13)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PADOFCERT PRIMARY KEY (
       PADFIRSTCERTNO
    )
);
CREATE TABLE PADSTOPREASON
(   PADSTOPREASONID INTEGER
  , MOTTGVERSIONID INTEGER
  , PADSTOPREASONTEXT CHARACTER (100)
  , PADSTOPREASONFRDT DATE
  , PADSTOPREASONTODT DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PADSTOPREASON PRIMARY KEY (
       PADSTOPREASONID
    )
);

CREATE TABLE PASSFORTAX
(   TESTNUMBER DECIMAL (12,0)
  , VRM CHARACTER (13)
  , LOCATIONID INTEGER
  , VEHICLETESTDATE DATE
  , VEHTSTEXPIRYDT DATE
  , DVLACOLOURCODE CHARACTER (1)
  , DVLACOLOURCODE2 CHARACTER (1)
  , TSTVEHDETMAKEDESC CHARACTER (30)
  , TSTVEHDETMODDESC CHARACTER (30)
  , VEHTSTRECMILEAGE INTEGER
  , VEHTSTRECMILAGETYP CHARACTER (1)
  , LOCALTESTSTATUS CHARACTER (1)
  , LPRESULTDATETIME TIMESTAMP(3)
  , LPVTSTOSERVDTTM TIMESTAMP(3)
  , LPSERVTOHOSTDTTM TIMESTAMP(3)
  , COLLECTORNAME CHARACTER (5)
  , LPSERVERPERSONID INTEGER
  , TESTERSNAME CHARACTER (35)
  , LOCATIONTYPE CHARACTER (1)
  , LOCATIONNUMBER CHARACTER (10)
  , VTSDEVICEIPADDR4 SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PASSFORTAX PRIMARY KEY (
       TESTNUMBER
    )
);

CREATE TABLE PAYMENTGROUP
(   PAYMENTGROUPID INTEGER
  , PAYMENTGROUPSTATUS CHARACTER (1)
  , PAYMENTGROUPREF CHARACTER (18)
  , PERSONID INTEGER
  , PAYMENTGROUPTYPE CHARACTER (2)
  , PAYMENTGROUPDATE DATE
  , USERPAYMENT CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PAYMENTGROUP PRIMARY KEY (
       PAYMENTGROUPID
    )
);

CREATE TABLE PAYMENTMETHOD
(   PAYMETHODID INTEGER
  , PAYMETHODCODE CHARACTER (2)
  , PAYMETHODFROMDATE DATE
  , PAYMETHODNAME CHARACTER (14)
  , PAYMETHODTODATE DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PAYMENTMETHOD PRIMARY KEY (
       PAYMETHODID
    )
);

CREATE TABLE PENDINGMESSAGE
(   MESSAGEID INTEGER
  , PERSONID INTEGER
  , AOLOCATIONID INTEGER
  , ZONEID INTEGER
  , CENTRALMBGROUPID INTEGER
  , MESSREADDATETIME TIMESTAMP(3)
  , ACKNOWDATE DATE
  , PENDINGMSGID INTEGER
  , TESTERACKREQ CHARACTER (1)
  , FINALSPCLNOTACKDT DATE
  , MESSRELEASEDATE DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PENDINGMESSAGE PRIMARY KEY (
       MESSAGEID
     , PENDINGMSGID
    )
);

CREATE TABLE PENDINGMESSAGEHIST
(   MESSAGEID INTEGER
  , PERSONID INTEGER
  , AOLOCATIONID INTEGER
  , ZONEID INTEGER
  , CENTRALMBGROUPID INTEGER
  , MESSREADDATETIME TIMESTAMP(3)
  , ACKNOWDATE DATE
  , PENDINGMSGID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PENDINGMSGHIST PRIMARY KEY (
       MESSAGEID
     , PENDINGMSGID
    )
);

CREATE TABLE PERSDETAIL
(   PERSONID INTEGER
  , USERID CHARACTER (8)
  , PERSDETHISTCNTR SMALLINT
  , PRSNTITLE CHARACTER (12)
  , FIRSTNAME CHARACTER (30)
  , MIDDLENAME CHARACTER (30)
  , LASTNAME CHARACTER (30)
  , PERSONAKA CHARACTER (30)
  , NORMFIRSTNAME CHARACTER (30)
  , NORMLASTNAME CHARACTER (30)
  , NORMPERSONAKA CHARACTER (30)
  , PERSONDRIVELICENCE CHARACTER (19)
  , PERDETHOMEADRLINE1 CHARACTER (50)
  , NORMHOMEADRLINE1 CHARACTER (50)
  , PERDETHOMEADRLINE2 CHARACTER (50)
  , PERDETHOMEADRLINE3 CHARACTER (50)
  , PERDETHOMEADRLINE4 CHARACTER (50)
  , NORMHOMEADRLINE4 CHARACTER (50)
  , PERDETHOMEPOSTCODE CHARACTER (8)
  , PERDETOFFICEADRLN1 CHARACTER (50)
  , PERDETOFFICEADRLN2 CHARACTER (50)
  , PERDETOFFICEADRLN3 CHARACTER (50)
  , PERDETOFFICEADRLN4 CHARACTER (50)
  , PERDETOFFICEPOSTCD CHARACTER (8)
  , PERSONPRIVACYMARK CHARACTER (1)
  , PERDETEMAIL TEXT
  , PERDETDAYTELNO CHARACTER (24)
  , PERDETEVENINGTELNO CHARACTER (24)
  , PERDETMOBILETELENO CHARACTER (24)
  , PERSONGENDER CHARACTER (1)
  , PRSNSPLNOTECALLDSK CHARACTER (100)
  , PRSNVIPERSONNELNO CHARACTER (10)
  , PERSAUTHMOTHER CHARACTER (30)
  , PERSAUTHPERSTOWN CHARACTER (20)
  , PERSAUTHFATHERPLCE CHARACTER (20)
  , PERSAUTHLASTSCHOOL CHARACTER (20)
  , PERSAUTHNOTABLEDTE CHARACTER (10)
  , PERSONDOB DATE
  , PERDETFROMDATE DATE
  , UPDATINGPERSONID INTEGER
  , DISABILITY CHARACTER (250)
  , PENDINGCHGEOFSTSDT DATE
  , PERSSCCOUNT SMALLINT
  , COMPETENCYIND CHARACTER (1)
  , COMPETENCYASSMDATE DATE
  , COUNTOPENTESTPERS SMALLINT
  , COUNTSNTDAY SMALLINT
  , COUNTSNTMRW SMALLINT
  , LSTCOMPREGVEHDTTM TIMESTAMP(3)
  , MAXOSMESSAGEID INTEGER
  , MAXOSSNID INTEGER
  , LASTTESTOLLID INTEGER
  , LASTTESTROLEID INTEGER
  , PERSROLEDIGEST CHARACTER (100)
  , TRAINBOOKUPDTDTTM TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSDETAIL PRIMARY KEY (
       PERSONID
    )
);

CREATE TABLE PERSDETHIST
(   PERSONID INTEGER
  , PERSDETHISTCNTR SMALLINT
  , USERID CHARACTER (8)
  , PRSNTITLE CHARACTER (12)
  , FIRSTNAME CHARACTER (30)
  , MIDDLENAME CHARACTER (30)
  , LASTNAME CHARACTER (30)
  , PERSONAKA CHARACTER (30)
  , PERSONDRIVELICENCE CHARACTER (19)
  , PERDETHOMEADRLINE1 CHARACTER (50)
  , PERDETHOMEADRLINE2 CHARACTER (50)
  , PERDETHOMEADRLINE3 CHARACTER (50)
  , PERDETHOMEADRLINE4 CHARACTER (50)
  , PERDETHOMEPOSTCODE CHARACTER (8)
  , PERDETOFFICEADRLN1 CHARACTER (50)
  , PERDETOFFICEADRLN2 CHARACTER (50)
  , PERDETOFFICEADRLN3 CHARACTER (50)
  , PERDETOFFICEADRLN4 CHARACTER (50)
  , PERDETOFFICEPOSTCD CHARACTER (8)
  , PERSONPRIVACYMARK CHARACTER (1)
  , PERDETEMAIL TEXT
  , PERDETDAYTELNO CHARACTER (24)
  , PERDETEVENINGTELNO CHARACTER (24)
  , PERDETMOBILETELENO CHARACTER (24)
  , PERSONGENDER CHARACTER (1)
  , PRSNSPLNOTECALLDSK CHARACTER (100)
  , PERDETFROMDATE DATE
  , UPDATINGPERSONID INTEGER
  , PENDINGCHGEOFSTSDT DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSDETHIST PRIMARY KEY (
       PERSONID
     , PERSDETHISTCNTR
    )
);

CREATE TABLE PERSEVNT
(   PERSONID INTEGER
  , PERSEVNTCNTR SMALLINT
  , UPDATINGPERSONID INTEGER
  , PERSONEVENTDATE DATE
  , PERSEVNTTYPECODE CHARACTER (6)
  , PERSONEVENTDESC CHARACTER (100)
  , PERSEVOUTCOME CHARACTER (6)
  , LOCATIONID INTEGER
  , ORIGINATINGPERSID INTEGER
  , COSTCENTREID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSEVNT PRIMARY KEY (
       PERSONID
     , PERSEVNTCNTR
    )
);

CREATE TABLE PERSEVNTOUTCMTYPE
(   PERSEVOUTCOME CHARACTER (6)
  , PERSEVOUTCOMEDESC CHARACTER (50)
  , PERSEVOUTCMDISCFLG CHARACTER (1)
  , PERSEVOUTCMINACTV CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSEVNTOUTCMTYPE PRIMARY KEY (
       PERSEVOUTCOME
    )
);

CREATE TABLE PERSEVNTTYPE
(   PERSEVNTTYPECODE CHARACTER (6)
  , PERSEVNTTYPEORDER INTEGER
  , PERSEVNTTYPEDESC CHARACTER (50)
  , PERSEVNTTYPDISCLOS CHARACTER (1)
  , PERSEVNTVTSUSE CHARACTER (1)
  , PERSEVNTTYPEFRDT DATE
  , PERSEVNTTYPETODATE DATE
  , PERSEVOUTCOME01 CHARACTER (6)
  , PERSEVOUTCOME02 CHARACTER (6)
  , PERSEVOUTCOME03 CHARACTER (6)
  , PERSEVOUTCOME04 CHARACTER (6)
  , PERSEVOUTCOME05 CHARACTER (6)
  , PERSEVOUTCOME06 CHARACTER (6)
  , PERSEVOUTCOME07 CHARACTER (6)
  , PERSEVOUTCOME08 CHARACTER (6)
  , PERSEVOUTCOME09 CHARACTER (6)
  , PERSEVOUTCOME10 CHARACTER (6)
  , PERSEVOUTCOME11 CHARACTER (6)
  , PERSEVOUTCOME12 CHARACTER (6)
  , PERSEVOUTCOME13 CHARACTER (6)
  , PERSEVOUTCOME14 CHARACTER (6)
  , PERSEVOUTCOME15 CHARACTER (6)
  , PERSEVOUTCOME16 CHARACTER (6)
  , PERSEVOUTCOME17 CHARACTER (6)
  , PERSEVOUTCOME18 CHARACTER (6)
  , PERSEVOUTCOME19 CHARACTER (6)
  , PERSEVOUTCOME20 CHARACTER (6)
  , PERSEVOUTCOME21 CHARACTER (6)
  , PERSEVOUTCOME22 CHARACTER (6)
  , PERSEVOUTCOME23 CHARACTER (6)
  , PERSEVOUTCOME24 CHARACTER (6)
  , PERSEVOUTCOME25 CHARACTER (6)
  , PERSEVOUTCOME26 CHARACTER (6)
  , PERSEVOUTCOME27 CHARACTER (6)
  , PERSEVOUTCOME28 CHARACTER (6)
  , PERSEVOUTCOME29 CHARACTER (6)
  , PERSEVOUTCOME30 CHARACTER (6)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSEVNTTYPE PRIMARY KEY (
       PERSEVNTTYPECODE
    )
);

CREATE TABLE PERSONROLE
(   PERSONID INTEGER
  , ROLEID INTEGER
  , PERSONROLEHISTCNTR SMALLINT
  , PRSNROLEFALBKENDDT DATE
  , PRSNROLESTATUSFRDT TIMESTAMP(3)
  , PERSONROLESTATKEY CHARACTER (2)
  , PRSNROLESTATUSTODT DATE
  , UPDATINGPERSONID INTEGER
  , FALLBACKPERSONID INTEGER
  , PRREDIRECTTRAINDT DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSONROLE PRIMARY KEY (
       PERSONID
     , ROLEID
    )
);

CREATE TABLE PERSONROLEAE
(   PERSONID INTEGER
  , ROLEID INTEGER
  , ORGID INTEGER
  , PRAEHISTCNTR SMALLINT
  , AECOMPANYROLE CHARACTER (30)
  , PERSONROLEAEFROMDT TIMESTAMP(3)
  , PERSONROLEAETODATE DATE
  , UPDATINGPERSONID INTEGER
  , FALLBACKPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSONROLEAE PRIMARY KEY (
       PERSONID
     , ROLEID
     , ORGID
    )
);

CREATE TABLE PERSONROLEAEHIST
(   PERSONID INTEGER
  , ROLEID INTEGER
  , ORGID INTEGER
  , PRAEHISTCNTR SMALLINT
  , AECOMPANYROLE CHARACTER (30)
  , PERSONROLEAEFROMDT TIMESTAMP(3)
  , PERSONROLEAETODATE DATE
  , UPDATINGPERSONID INTEGER
  , FALLBACKPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSONROLEAEHIST PRIMARY KEY (
       PERSONID
     , ROLEID
     , ORGID
     , PRAEHISTCNTR
    )
);

CREATE TABLE PERSONROLEAREA
(   PERSONID INTEGER
  , ROLEID INTEGER
  , AREAID INTEGER
  , PRAREAHISTCNTR SMALLINT
  , UPDATINGPERSONID INTEGER
  , PERSONROLEAREAFRDT TIMESTAMP(3)
  , PERSONROLEAREATODT DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSONROLEAREA PRIMARY KEY (
       PERSONID
     , ROLEID
     , AREAID
    )
);

CREATE TABLE PERSONROLEAREAHIST
(   PERSONID INTEGER
  , ROLEID INTEGER
  , AREAID INTEGER
  , PRAREAHISTCNTR SMALLINT
  , UPDATINGPERSONID INTEGER
  , PERSONROLEAREAFRDT TIMESTAMP(3)
  , PERSONROLEAREATODT DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSONROLEAREAHIST PRIMARY KEY (
       PERSONID
     , ROLEID
     , AREAID
     , PRAREAHISTCNTR
    )
);

CREATE TABLE PERSONROLEHISTORY
(   PERSONID INTEGER
  , ROLEID INTEGER
  , PERSONROLEHISTCNTR SMALLINT
  , PRSNROLEFALBKENDDT DATE
  , PRSNROLESTATUSFRDT TIMESTAMP(3)
  , PERSONROLESTATKEY CHARACTER (2)
  , PRSNROLESTATUSTODT DATE
  , UPDATINGPERSONID INTEGER
  , FALLBACKPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSONROLEHISTORY PRIMARY KEY (
       PERSONID
     , ROLEID
     , PERSONROLEHISTCNTR
    )
);

CREATE TABLE PERSONROLETOACC
(   PERSONID INTEGER
  , ROLEID INTEGER
  , ORGID INTEGER
  , ORGACCOUNTID INTEGER
  , PERSROLTACCHIST SMALLINT
  , UPDATINGPERSONID INTEGER
  , PRACCFROMDATE TIMESTAMP(3)
  , FALLBACKPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSONROLETOACC PRIMARY KEY (
       PERSONID
     , ROLEID
     , ORGACCOUNTID
    )
);

CREATE TABLE PERSONROLEVRO
(   PERSONID INTEGER
  , ROLEID INTEGER
  , LOCATIONID INTEGER
  , PRVROHISTCNTR SMALLINT
  , PRSNROLEVROFROMDT TIMESTAMP(3)
  , PRSNROLEVROTODATE DATE
  , UPDATINGPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSONROLEVRO PRIMARY KEY (
       PERSONID
     , ROLEID
     , LOCATIONID
    )
);

CREATE TABLE PERSONROLEVROHIST
(   PERSONID INTEGER
  , ROLEID INTEGER
  , LOCATIONID INTEGER
  , PRVROHISTCNTR SMALLINT
  , PRSNROLEVROFROMDT TIMESTAMP(3)
  , PRSNROLEVROTODATE DATE
  , UPDATINGPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSONROLEVROHIST PRIMARY KEY (
       PERSONID
     , ROLEID
     , LOCATIONID
     , PRVROHISTCNTR
    )
);

CREATE TABLE PERSONROLEVTSAE
(   ORGANISATNLOCID INTEGER
  , LOCATIONID INTEGER
  , ORGID INTEGER
  , PERSONID INTEGER
  , ROLEID INTEGER
  , PERSRLEVTSAEHSTCTR SMALLINT
  , PRSNROLEVTSAEFRDT TIMESTAMP(3)
  , PRSNROLEVTSAETODT DATE
  , UPDATINGPERSONID INTEGER
  , REGISTERVEHICLEDT TIMESTAMP(3)
  , FALLBACKPERSONID INTEGER
  , PRSNROLETSTGRP1DT DATE
  , PRSNROLETSTGRP2DT DATE
  , COUNTFBTDAY SMALLINT
  , TESTCLASSID CHARACTER (2)
  , FLAGNORMALFB CHARACTER (1)
  , ETRDATETIMEFB TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSONROLEVTSAE PRIMARY KEY (
       PERSONID
     , ROLEID
     , ORGANISATNLOCID
    )
);

CREATE TABLE PERSONROLEVTSAEHIS
(   ORGANISATNLOCID INTEGER
  , LOCATIONID INTEGER
  , ORGID INTEGER
  , PERSONID INTEGER
  , ROLEID INTEGER
  , PERSRLEVTSAEHSTCTR SMALLINT
  , PRSNROLEVTSAEFRDT TIMESTAMP(3)
  , PRSNROLEVTSAETODT DATE
  , UPDATINGPERSONID INTEGER
  , REGISTERVEHICLEDT TIMESTAMP(3)
  , FALLBACKPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSONROLEVTSAEHIS PRIMARY KEY (
       PERSONID
     , ROLEID
     , ORGANISATNLOCID
     , PERSRLEVTSAEHSTCTR
    )
);

CREATE TABLE PERSONROLEZONE
(   PERSONID INTEGER
  , ROLEID INTEGER
  , ZONEID INTEGER
  , PRZONEHISTCNTR SMALLINT
  , PRSNROLEZONEFRDT TIMESTAMP(3)
  , PRSNROLEZONETODATE DATE
  , UPDATINGPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSONROLEZONE PRIMARY KEY (
       PERSONID
     , ROLEID
     , ZONEID
    )
);

CREATE TABLE PERSONROLEZONEHIST
(   PERSONID INTEGER
  , ROLEID INTEGER
  , ZONEID INTEGER
  , PRZONEHISTCNTR SMALLINT
  , PRSNROLEZONEFRDT TIMESTAMP(3)
  , PRSNROLEZONETODATE DATE
  , UPDATINGPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSONROLEZONEHIST PRIMARY KEY (
       PERSONID
     , ROLEID
     , ZONEID
     , PRZONEHISTCNTR
    )
);

CREATE TABLE PERSONUNAVAILABLE
(   PERSONID INTEGER
  , PRSNUNAVAILNUMBER INTEGER
  , PRSNUNAVAILBLEFRDT TIMESTAMP(3)
  , PRSNUNAVAILABLERES CHARACTER (100)
  , PRSNUNAVAILBLETODT TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSONUNAVAILABLE PRIMARY KEY (
       PERSONID
     , PRSNUNAVAILNUMBER
    )
);

CREATE TABLE PERSROLETESTCLASS
(   PERSONID INTEGER
  , ROLEID INTEGER
  , TESTCLASSID CHARACTER (2)
  , PRTSCLHISTCTR SMALLINT
  , PRCLASSFRDT TIMESTAMP(3)
  , PRCLSONOFFFLAG CHARACTER (1)
  , UPDATINGPERSONID INTEGER
  , TESTCLASSGROUPID CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSROLETESTCLASS PRIMARY KEY (
       PERSONID
     , ROLEID
     , TESTCLASSID
    )
);

CREATE TABLE PERSROLETESTGROUP
(   PERSONID INTEGER
  , ROLEID INTEGER
  , TESTCLASSGROUPID CHARACTER (1)
  , PRTESTGRPHISTCNTR SMALLINT
  , TESTVEHVRM CHARACTER (13)
  , VEHTESTCNTR SMALLINT
  , PRCLSGRPEFECTCRSDT DATE
  , PRCLSGRPEFECTLSTDT DATE
  , PRGROUPSTATUSFRDT TIMESTAMP(3)
  , PRGROUPSTATUS CHARACTER (2)
  , PRGROUPSTATUSTODT DATE
  , UPDATINGPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSROLETESTGROUP PRIMARY KEY (
       PERSONID
     , ROLEID
     , TESTCLASSGROUPID
    )
);

CREATE TABLE PERSROLETOACHST
(   PERSONID INTEGER
  , ROLEID INTEGER
  , ORGID INTEGER
  , ORGACCOUNTID INTEGER
  , PERSROLTACCHIST SMALLINT
  , UPDATINGPERSONID INTEGER
  , PRACCFROMDATE TIMESTAMP(3)
  , PRACCTODATE DATE
  , FALLBACKPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSROLETOACHST PRIMARY KEY (
       PERSONID
     , ROLEID
     , ORGACCOUNTID
     , PERSROLTACCHIST
    )
);

CREATE TABLE PERSROLETSTCLSHIST
(   PERSONID INTEGER
  , ROLEID INTEGER
  , TESTCLASSID CHARACTER (2)
  , PRTSCLHISTCTR SMALLINT
  , PRCLASSFRDT TIMESTAMP(3)
  , PRCLSONOFFFLAG CHARACTER (1)
  , UPDATINGPERSONID INTEGER
  , TESTCLASSGROUPID CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSRLTSTCLSHSTCNTR PRIMARY KEY (
       PERSONID
     , ROLEID
     , TESTCLASSID
     , PRTSCLHISTCTR
    )
);

CREATE TABLE PERSROLETSTGRPHIST
(   PERSONID INTEGER
  , ROLEID INTEGER
  , TESTCLASSGROUPID CHARACTER (1)
  , PRTESTGRPHISTCNTR SMALLINT
  , TESTVEHVRM CHARACTER (13)
  , VEHTESTCNTR SMALLINT
  , PRCLSGRPEFECTCRSDT DATE
  , PRCLSGRPEFECTLSTDT DATE
  , PRGROUPSTATUSFRDT TIMESTAMP(3)
  , PRGROUPSTATUS CHARACTER (2)
  , PRGROUPSTATUSTODT DATE
  , UPDATINGPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PERSROLETSTGRPHIST PRIMARY KEY (
       PERSONID
     , ROLEID
     , TESTCLASSGROUPID
     , PRTESTGRPHISTCNTR
    )
);

CREATE TABLE PHOTOGRAPH
(   PERSONID INTEGER
  , PHOTONUMBER INTEGER
  , PHOTODATAREFERENCE CHARACTER (237) DEFAULT 'MOTSCHEMA/PHOTO?UID=00000000000000000000000000000000&OID=0'
  , PHOTODATE DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PHOTOGRAPH PRIMARY KEY (
       PERSONID
     , PHOTONUMBER
    )
);

CREATE TABLE PORTFOLIOITEM
(   COURSECODE CHARACTER (10)
  , PERSONID INTEGER
  , PORTFOLIOITEMFRDT DATE
  , PORTFOLIOITEMTODT DATE
  , UPDATINGPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PORTFOLIOITEM PRIMARY KEY (
       COURSECODE
     , PERSONID
    )
);

CREATE TABLE PREDEFINEDMESSAGE
(   MSGTEXTID INTEGER
  , MSGSYSFLAG CHARACTER (1)
  , MSGTEXT TEXT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PREDEFINEDMESSAGE PRIMARY KEY (
       MSGTEXTID
    )
);

CREATE TABLE PRINTORDERREF
(   PONUMBER INTEGER
  , POTYPE CHARACTER (1)
  , POREFERENCE CHARACTER (10)
  , POEXTRACTDATETIME TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_PRINTORDERREF PRIMARY KEY (
       POTYPE
     , PONUMBER
    )
);

CREATE TABLE QUALIFICATION
(   QUALIFICATIONID INTEGER
  , QUALIFICATION CHARACTER (100)
  , UPDATINGPERSONID INTEGER
  , QUALIFICATIONFRDT DATE
  , QUALPERSONID INTEGER
  , QUALIFICATNTYPID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_QUALIFICATION PRIMARY KEY (
       QUALPERSONID
     , QUALIFICATIONID
    )
);

CREATE TABLE QUALIFICATNTYP
(   QUALIFICATNTYPID INTEGER
  , QUALIFICATNTYPNAME CHARACTER (30)
  , QUALIFICATNTYPDESC CHARACTER (30)
  , QUALIFICATNTYPFRDT DATE
  , QUALIFICATNTYPTODT DATE
  , QUALTYPUPDPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_QUALIFICATNTYP PRIMARY KEY (
       QUALIFICATNTYPID
    )
);

CREATE TABLE QUALITYCHECKTEST
(   TESTVEHVRM CHARACTER (13)
  , VEHTESTCNTR SMALLINT
  , QUALCHECKTYPE CHARACTER (1)
  , QUALCHECKRESULT CHARACTER (1)
  , QUALCHECKCOMMENTS CHARACTER (200)
  , QUALCHECKFOLLOWUP CHARACTER (200)
  , QUALCHECKNTACCEPT CHARACTER (1)
  , QUALCHECKRECDATE DATE
  , DEMORESULTTYPEID CHARACTER (2)
  , QUALCHKPERSONID INTEGER
  , QCTESTVEHVRM CHARACTER (13)
  , QCVEHTESTCNTR SMALLINT
  , UPDATINGPERSONID INTEGER
  , TSTITMID01 SMALLINT
  , TSTITMID02 SMALLINT
  , TSTITMID03 SMALLINT
  , TSTITMID04 SMALLINT
  , TSTITMID05 SMALLINT
  , TSTITMID06 SMALLINT
  , TSTITMID07 SMALLINT
  , TSTITMID09 SMALLINT
  , TSTITMID08 SMALLINT
  , TSTITMID10 SMALLINT
  , TSTITMID11 SMALLINT
  , TSTITMID12 SMALLINT
  , TSTITMID13 SMALLINT
  , TSTITMID14 SMALLINT
  , TSTITMID15 SMALLINT
  , TSTITMID16 SMALLINT
  , TSTITMID17 SMALLINT
  , TSTITMID18 SMALLINT
  , TSTITMID19 SMALLINT
  , TSTITMID20 SMALLINT
  , TSTITMID21 SMALLINT
  , TSTITMID22 SMALLINT
  , TSTITMID23 SMALLINT
  , TSTITMID24 SMALLINT
  , TSTITMID25 SMALLINT
  , TSTITMID26 SMALLINT
  , TSTITMID27 SMALLINT
  , TSTITMID28 SMALLINT
  , TSTITMID29 SMALLINT
  , TSTITMID30 SMALLINT
  , COMMENT01 CHARACTER (250)
  , COMMENT02 CHARACTER (250)
  , COMMENT03 CHARACTER (250)
  , COMMENT04 CHARACTER (250)
  , COMMENT05 CHARACTER (250)
  , COMMENT06 CHARACTER (250)
  , COMMENT07 CHARACTER (250)
  , COMMENT08 CHARACTER (250)
  , COMMENT09 CHARACTER (250)
  , COMMENT10 CHARACTER (250)
  , COMMENT11 CHARACTER (250)
  , COMMENT12 CHARACTER (250)
  , COMMENT13 CHARACTER (250)
  , COMMENT14 CHARACTER (250)
  , COMMENT15 CHARACTER (250)
  , COMMENT16 CHARACTER (250)
  , COMMENT17 CHARACTER (250)
  , COMMENT18 CHARACTER (250)
  , COMMENT19 CHARACTER (250)
  , COMMENT20 CHARACTER (250)
  , COMMENT21 CHARACTER (250)
  , COMMENT22 CHARACTER (250)
  , COMMENT23 CHARACTER (250)
  , COMMENT24 CHARACTER (250)
  , COMMENT25 CHARACTER (250)
  , COMMENT26 CHARACTER (250)
  , COMMENT27 CHARACTER (250)
  , COMMENT28 CHARACTER (250)
  , COMMENT29 CHARACTER (250)
  , COMMENT30 CHARACTER (250)
  , QUALCHKQCPERSONID INTEGER
  , QCHKDEMOTSTREFRES CHARACTER (200)
  , ORGID INTEGER
  , LOCATIONID INTEGER
  , ORGANISATNLOCID INTEGER
  , TESTCLASSGROUPID CHARACTER (1)
  , TESTCLASSID CHARACTER (2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_QUALITYCHECKTEST PRIMARY KEY (
       TESTVEHVRM
     , VEHTESTCNTR
     , DEMORESULTTYPEID
    )
);

CREATE TABLE REASONENROLCANCEL
(   REASONENRLCNCLID INTEGER
  , REASONENRLCNCLDESC CHARACTER (50)
  , REASONENRLCNCLFRDT DATE
  , REASONENRLCNCLTODT DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_REASONENROLCANCEL PRIMARY KEY (
       REASONENRLCNCLID
    )
);

CREATE TABLE REFUSALTOTESTRSN
(   REFUSALID SMALLINT
  , MOTTGVERSIONID INTEGER
  , REFUSALDESCWELSH CHARACTER (250)
  , REFUSALDESCRIPTION CHARACTER (250)
  , REFUSALREASONFRDT DATE
  , REFUSALREASONTODT DATE
  , REFUSALREASONTYPE CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_REFUSALTOTESTRSN PRIMARY KEY (
       REFUSALID
    )
);

CREATE TABLE REMINDERCOMM
(   REMINDID INTEGER
  , REMINDCOMTYPE CHARACTER (1)
  , REMINDCOMSENTDT TIMESTAMP(3)
  , REMINDCOMSCHEDDT TIMESTAMP(3)
  , SMSCOMNETWORKID SMALLINT
  , REMINDCOMSMSRECDT TIMESTAMP(3)
  , REMINDCOMCONFDT TIMESTAMP(3)
  , REMINDCOMRESULT SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_RCREMINDID PRIMARY KEY (
       REMINDID
     , REMINDCOMTYPE
    )
);

CREATE TABLE REMINDERPHONEBLOCK
(   REMINDPHONENUMBER CHARACTER (13)
  , PHONEBLOCKDATETIME TIMESTAMP(3)
  , PHONEBLOCKTESTFLAG CHARACTER (1)
  , PHONEBLOCKSUBSFLAG CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_RPBREMHONENUM PRIMARY KEY (
       REMINDPHONENUMBER
    )
);

CREATE TABLE REMINDERREQUEST
(   REMINDID INTEGER
  , REMINDPHONENUMBER CHARACTER (13)
  , REMINDREQUESTTYPE CHARACTER (1)
  , REMINDREQSTATUS CHARACTER (1)
  , TESTNUMBER DECIMAL (12,0)
  , DVLAV5REFNO DECIMAL (14,0)
  , REMINDSUBSKEY INTEGER
  , SMSTRANSID INTEGER
  , SMSTEXTMESSAGE CHARACTER (20)
  , SMSNETWORKID SMALLINT
  , REMINDERRORNUM SMALLINT
  , BLOCKCOUNTINCLUDE CHARACTER (1)
  , FIRSTTESTYEARS SMALLINT
  , REMINDREQVRM CHARACTER (13)
  , REMINDBILLEXPDT TIMESTAMP(3)
  , INTERNETREQRECDT TIMESTAMP(3)
  , PHONEREQRECSMSDT TIMESTAMP(3)
  , PHONEREQRECMOTDT TIMESTAMP(3)
  , REMINDACTIVEDT TIMESTAMP(3)
  , REMINDCANCELDT TIMESTAMP(3)
  , PHONECANRECSMSDT TIMESTAMP(3)
  , SMSCANCELTRANSID INTEGER
  , REMINDREQDELDATE DATE
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , TSTVEHROOTVRM CHARACTER (13)
  , TSTVEHROOTHISTCNTR SMALLINT
  , DVLAVRM CHARACTER (13)
  , DVLAVIN CHARACTER (20)
  , VEHTSTEXPIRYDT DATE
  , SSTESTNUMBER DECIMAL (12,0)
  , SSDATE DATE
  , REMINDLOCATIONID INTEGER
  , VTSREQRECDT TIMESTAMP(3)
  , REMINDREQPERSONID INTEGER
  , REMINDVTSCHARGEIND CHARACTER (1)
  , REMINDUSRCHARGEIND CHARACTER (1)
  , SSREMINDID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_RRREMINDID PRIMARY KEY (
       REMINDID
    )
);

CREATE TABLE REMOTELOGIN
(   REMOTELOGINID INTEGER
  , LOCATIONID INTEGER
  , PERSONID INTEGER
  , ENABLERMTLOGINDTTM TIMESTAMP(3)
  , DEVICETYPE CHARACTER (2)
  , LOCATIONTYPE CHARACTER (1)
  , LOCATIONNUMBER CHARACTER (10)
  , VTSDEVICEIPADDR4 SMALLINT
  , ASSIGNEDIPADDRESS CHARACTER (20)
  , LOCALIPADDRESS CHARACTER (20)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_REMOTELOGIN PRIMARY KEY (
       REMOTELOGINID
    )
);

CREATE TABLE RESOURCE
(   RESOURCEID INTEGER
  , RESOURCETYPEID INTEGER
  , LOCATIONID INTEGER
  , RESOURCEBDGTUNTCST DECIMAL (9,2)
  , RESOURCECONTACT CHARACTER (60)
  , RESOURCEDESC CHARACTER (50)
  , RESOURCELOCATION CHARACTER (25)
  , RESOURCENAME CHARACTER (30)
  , RESRCEAVLFRMDTE DATE
  , RESRCEAVLTODTE DATE
  , SUPPLIERDESC CHARACTER (60)
  , BOOKINGUPDTDTTM TIMESTAMP(3)
  , UPDATINGPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_RESOURCE PRIMARY KEY (
       RESOURCEID
    )
);

CREATE TABLE RESOURCEBOOKING
(   RESOURCEBOOKINGID INTEGER
  , RESOURCEID INTEGER
  , RESOURCETYPEID INTEGER
  , COURSECODE CHARACTER (10)
  , EVENTCODE INTEGER
  , SESSIONNUMBER INTEGER
  , RESOURCEBOOKALCAMT DECIMAL (9,2)
  , RESOURCEBOOKCNCLDT DATE
  , RESBOOKINGRES CHARACTER (100)
  , RESOURCEBOOKFRDTTM TIMESTAMP(3)
  , RESOURCEBOOKTODTTM TIMESTAMP(3)
  , UPDATINGPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_RESOURCEBOOKING PRIMARY KEY (
       RESOURCEID
     , RESOURCEBOOKINGID
    )
);

CREATE TABLE RESOURCETYPE
(   RESOURCETYPEID INTEGER
  , RESOURCETYPENAME CHARACTER (20)
  , RESOURCETYPDESC CHARACTER (100)
  , RESOURCETYPMULTBOK CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_RESOURCETYPE PRIMARY KEY (
       RESOURCETYPEID
    )
);

CREATE TABLE RESREQUIREMENT
(   COURSECODE CHARACTER (10)
  , SESSIONTEMPNUMBER INTEGER
  , RESOURCETYPEID INTEGER
  , RESOURCEREQQTY SMALLINT
  , RESOURCEREQFROMDTE DATE
  , RESOURCEREQTODTE DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_RESREQUIREMENT PRIMARY KEY (
       COURSECODE
     , SESSIONTEMPNUMBER
     , RESOURCETYPEID
    )
);

CREATE TABLE RESULTSETDECODE
(   RSLTSETDESCCD CHARACTER (2)
  , RSLTSETDESCRIPTION CHARACTER (100)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_RESULTSETDECODE PRIMARY KEY (
       RSLTSETDESCCD
    )
);

CREATE TABLE RMBOTESTITEM
(   BOSECNID INTEGER
  , BOSECNTYPE CHARACTER (1)
  , RFRDSID INTEGER
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , CREATINGPERSONID INTEGER
  , CREATIONDATETIME TIMESTAMP(3)
  , BOSECNNAME CHARACTER (40)
  , BOCOMPOSITEID INTEGER
  , BOCOMPOSITENAME CHARACTER (60)
  , BOPARENTID INTEGER
  , CREATIONRFRDSID INTEGER
  , UPDATINGRFRDSID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_RMBOTISECNID PRIMARY KEY (
       BOSECNTYPE
     , BOSECNID
     , RFRDSID
    )
);

CREATE TABLE RMBRULETSTCLASSLNK
(   BUSINESSRULEID INTEGER
  , TESTCLASSID CHARACTER (2)
  , RFRDSID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_RMBRTCRFRDSID PRIMARY KEY (
       BUSINESSRULEID
     , TESTCLASSID
     , RFRDSID
    )
);

CREATE TABLE RMBUSINESSRULE
(   BUSINESSRULEID INTEGER
  , RFRDSID INTEGER
  , BUSINESSRULENAME CHARACTER (50)
  , BUSINESSRULETEXT TEXT
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , UPDATINGRFRDSID INTEGER
  , CREATINGPERSONID INTEGER
  , CREATIONDATETIME TIMESTAMP(3)
  , CREATIONRFRDSID INTEGER
  , BUSRULEPROTECTED CHARACTER (1)
  , BUSRULETYPE CHARACTER (1)
  , BUSRULECOMPARISON CHARACTER (2)
  , BUSRULEDATEVAL DATE
  , BUSRULEUTILISED CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_RMBRBUSRULEID PRIMARY KEY (
       BUSINESSRULEID
     , RFRDSID
    )
);

CREATE TABLE RMCONSISTCHKLST
(   CHECKLISTID INTEGER
  , RFRDSID INTEGER
  , RFRID INTEGER
  , TSTITMID INTEGER
  , BUSINESSRULEID INTEGER
  , CHECKLISTSCOPE CHARACTER (1)
  , CHECKLISTNAME CHARACTER (50)
  , CHECKLISTMESSAGE CHARACTER (80)
  , CHECKLISTDATETIME TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_RMCCLCHKLSTID PRIMARY KEY (
       CHECKLISTID
     , RFRDSID
    )
);

CREATE TABLE RMDATASETVERSION
(   RFRDSID INTEGER
  , RFRDSNAME CHARACTER (30)
  , RFRDSCOMMENT TEXT
  , RFRDSSTATUS CHARACTER (1)
  , RFRDSVERSION DECIMAL (4,2)
  , CREATINGPERSONID INTEGER
  , LOCKINGPERSONID INTEGER
  , UPDATINGPERSONID INTEGER
  , CREATINGDATETIME TIMESTAMP(3)
  , LOCKINGDATETIME TIMESTAMP(3)
  , UPDATINGDATETIME TIMESTAMP(3)
  , RFRDSRELEASEDATE DATE
  , CHECKINGDATETIME TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_RMDVRFRDSID PRIMARY KEY (
       RFRDSID
    )
);

CREATE TABLE RMRFR
(   RFRID INTEGER
  , RFRDSID INTEGER
  , TSTITMID INTEGER
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , UPDATINGRFRDSID INTEGER
  , CREATINGPERSONID INTEGER
  , CREATIONDATETIME TIMESTAMP(3)
  , CREATIONRFRDSID INTEGER
  , RFRAVAILABILITY CHARACTER (1)
  , RFRPROTECTED CHARACTER (1)
  , RFRCOMMENT TEXT
  , BUSINESSRULEID INTEGER
  , RFRPENDINGDELETE CHARACTER (1)
  , RFRORDER INTEGER
  , INSPCTNMANUALREF CHARACTER (10)
  , MINORITEM CHARACTER (1)
  , RFRDESC CHARACTER (250)
  , RFRDESCWELSH CHARACTER (250)
  , RFRLOCMARKER CHARACTER (1)
  , RFRQTMARKER CHARACTER (1)
  , RFRNOTE CHARACTER (1)
  , RFRMANUAL CHARACTER (1)
  , RFRSPECPROC CHARACTER (1)
  , RFRINSPMANDESC TEXT
  , TSTITMADVISORYTEXT CHARACTER (250)
  , TSTITMADVISRYWELSH CHARACTER (250)
  , TSTITMSETSECID INTEGER
  , RFRHYPLNKREF CHARACTER (5)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_RMRFRID PRIMARY KEY (
       RFRID
     , RFRDSID
    )
);

CREATE TABLE RMTESTCLASS
(   TESTCLASSID CHARACTER (2)
  , TESTCLASSGROUPID CHARACTER (1)
  , TESTCLASSDESC CHARACTER (150)
  , TESTCLASSNUMBER CHARACTER (4)
  , TESTCLASSPRINTAS CHARACTER (4)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_RMTCTESTCLASS PRIMARY KEY (
       TESTCLASSID
    )
);

CREATE TABLE RMTESTITEM
(   TSTITMID INTEGER
  , RFRDSID INTEGER
  , PARENTID INTEGER
  , TSTITMSETSECID INTEGER
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , UPDATINGRFRDSID INTEGER
  , CREATINGPERSONID INTEGER
  , CREATIONDATETIME TIMESTAMP(3)
  , CREATIONRFRDSID INTEGER
  , TSTITMNAME CHARACTER (100)
  , TSTITMDESCRIPTION CHARACTER (50)
  , TSTITMDESCWELSH CHARACTER (50)
  , TSTITMCOMMENT TEXT
  , TSTITMTYPE CHARACTER (1)
  , TSTITMPROTECTED CHARACTER (1)
  , TSTITMUTILISED CHARACTER (1)
  , TSTITMORDER INTEGER
  , BOSECNID INTEGER
  , BOSECNTYPE CHARACTER (1)
  , TSTITMLEVEL SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_RMTITSTITMID PRIMARY KEY (
       TSTITMID
     , RFRDSID
    )
);

CREATE TABLE ROLE
(   ROLEID INTEGER
  , ROLENAME CHARACTER (30)
  , ROLECANACCESSAOMB CHARACTER (1)
  , ROLECANACESCNTRLMB CHARACTER (1)
  , ROLECANACESZONEMB CHARACTER (1)
  , ROLECANASSOSMRTCRD CHARACTER (1)
  , ROLECANASSOWITHAE CHARACTER (1)
  , ROLECANASSOWITHAO CHARACTER (1)
  , ROLECANASSOWTHAREA CHARACTER (1)
  , ROLECANASSOWTHCLS CHARACTER (1)
  , ROLECANASSOWITHVRO CHARACTER (1)
  , ROLECANASSOWTHVTAE CHARACTER (1)
  , ROLERECEIVESSN CHARACTER (1)
  , ROLEREQTESTERADMIN CHARACTER (1)
  , ROLESINGLEAERCPNT CHARACTER (1)
  , ROLESINGLEVTSRCPNT CHARACTER (1)
  , ROLECANASSOCZONE CHARACTER (1)
  , ROLECANASSOCCTC CHARACTER (1)
  , ROLECANQC CHARACTER (1)
  , ROLECANASSOCACC CHARACTER (1)
  , ROLESYSUSER CHARACTER (1)
  , ROLEVI CHARACTER (1)
  , SMARTCARDROLEPOS SMALLINT
  , CORPORATEROLEPOS SMALLINT
  , MSGENTRYAUTHLEVEL SMALLINT
  , ROLEMANAGESALLACC CHARACTER (1)
  , ROLEUSEDAT CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_ROLE PRIMARY KEY (
       ROLEID
    )
);

CREATE TABLE ROLEAPPOINTMENT
(   APPOINTINGROLEID INTEGER
  , ROLEIDAPPOINTED INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_ROLEAPPOINTMENT PRIMARY KEY (
       APPOINTINGROLEID
     , ROLEIDAPPOINTED
    )
);

CREATE TABLE ROLESET
(   CENTRALMBGROUPID INTEGER
  , ROLEID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_ROLESET PRIMARY KEY (
       CENTRALMBGROUPID
     , ROLEID
    )
);

CREATE TABLE SESSIONTEMPLATE
(   COURSECODE CHARACTER (10)
  , SESSIONTEMPNUMBER INTEGER
  , SESSTEMPLTDAYEND SMALLINT
  , SESSTEMPLTDAYSTART SMALLINT
  , SESSIONTEMPLTDESC CHARACTER (100)
  , SESSIONTEMPLTENDTM TIME
  , SESSIONTEMPLTSTTM TIME
  , SESSIONTEMPLTFRDTE DATE
  , SESSIONTEMPLTTODTE DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_SESSIONTEMPLATE PRIMARY KEY (
       COURSECODE
     , SESSIONTEMPNUMBER
    )
);

CREATE TABLE SIGNATURE
(   PERSONID INTEGER
  , SIGNATURENUMBER INTEGER
  , SIGNATUREDATAREF CHARACTER (237) DEFAULT 'MOTSCHEMA/SIGNATUREIMAGE?UID=00000000000000000000000000000000&OID=0'
  , SIGNATUREDATE DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_SIGNATURE PRIMARY KEY (
       PERSONID
     , SIGNATURENUMBER
    )
);

CREATE TABLE SMARTCARD
(   SMARTCARDID INTEGER
  , SMARTCARDHWSRLNO DECIMAL (10,0)
  , SMARTCARDLSTUSGKEY SMALLINT
  , SMARTCARDTYPE CHARACTER (1)
  , SMARTCARDSTATUS CHARACTER (2)
  , SMCASTAHISTCNTR SMALLINT
  , SMARTCARDSTSFRDT TIMESTAMP(3)
  , PHOTONUMBER INTEGER
  , SIGNATURENUMBER INTEGER
  , SMCAHOLDERHISTCNTR SMALLINT
  , LINKEDPERSONID INTEGER
  , SMARTTOPRSNRESISS CHARACTER (1)
  , SMARTCARDPRSNFRDT TIMESTAMP(3)
  , SMARTCARDPRSNTODT DATE
  , LOCATIONID INTEGER
  , UPDATINGPERSONID INTEGER
  , SCSYNCHLOCID INTEGER
  , SCSYNCHDATETIME TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_SMARTCARD PRIMARY KEY (
       SMARTCARDID
    )
);

CREATE TABLE SMCAHOLDERHIST
(   SMARTCARDID INTEGER
  , SMCAHOLDERHISTCNTR SMALLINT
  , LINKEDPERSONID INTEGER
  , SMARTTOPRSNRESISS CHARACTER (1)
  , SMARTCARDPRSNFRDT TIMESTAMP(3)
  , SMARTCARDPRSNTODT DATE
  , UPDATINGPERSONID INTEGER
  , SMARTCARDTYPE CHARACTER (1)
  , LOCATIONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_SMCAHOLDERHIST PRIMARY KEY (
       SMARTCARDID
     , SMCAHOLDERHISTCNTR
    )
);

CREATE TABLE SMCASTAHIST
(   SMARTCARDID INTEGER
  , SMCASTAHISTCNTR SMALLINT
  , SMARTCARDSTATUS CHARACTER (2)
  , SMARTCARDSTSFRDT TIMESTAMP(3)
  , UPDATINGPERSONID INTEGER
  , SMARTCARDSTSTODT DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_SMCASTAHIST PRIMARY KEY (
       SMARTCARDID
     , SMCASTAHISTCNTR
    )
);

CREATE TABLE SNTOROLELINK
(   MESSAGEID INTEGER
  , ROLEID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_SNTOROLELINK PRIMARY KEY (
       MESSAGEID
     , ROLEID
    )
);

CREATE TABLE SNTOTESTCLASSLINK
(   MESSAGEID INTEGER
  , TESTCLASSID CHARACTER (2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_SNTOTESTCLASSLINK PRIMARY KEY (
       MESSAGEID
     , TESTCLASSID
    )
);

CREATE TABLE STATETRANSITION
(   ENTITYIDENTIFIER CHARACTER (4)
  , CURSTATUSCODE CHARACTER (2)
  , FUNCSHORTCODE CHARACTER (5)
  , CHANGESTATECODE CHARACTER (2)
  , ENTITYNAME CHARACTER (50)
  , FUNCNAME CHARACTER (31)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_STATETRANSITION PRIMARY KEY (
       ENTITYIDENTIFIER
     , CURSTATUSCODE
     , FUNCSHORTCODE
     , CHANGESTATECODE
    )
);

CREATE TABLE STATUSDESCRIPTION
(   STATUSKEY CHARACTER (2)
  , STATUSTEXTDESC CHARACTER (100)
  , UPDATINGPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_STATUSDESCRIPTION PRIMARY KEY (
       STATUSKEY
    )
);

CREATE TABLE SUBSTITUTENTREASON
(   SUBNTREASONID INTEGER
  , SUBNTREASONDESC CHARACTER (50)
  , SUBNTREASONFRDT DATE
  , SUBNTREASONTODATE DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_SUBSTITUTENTREASON PRIMARY KEY (
       SUBNTREASONID
    )
);

CREATE TABLE TESTCLASS
(   TESTCLASSID CHARACTER (2)
  , TESTCLASSGROUPID CHARACTER (1)
  , TESTCLASSDESC CHARACTER (150)
  , TESTCLASSNUMBER CHARACTER (4)
  , TESTCLASSPRINTAS CHARACTER (4)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_TESTCLASS PRIMARY KEY (
       TESTCLASSID
    )
);

CREATE TABLE TESTCLASSGROUP
(   TESTCLASSGROUPID CHARACTER (1)
  , TESTCLASSGROUPNAME CHARACTER (20)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_TESTCLASSGROUP PRIMARY KEY (
       TESTCLASSGROUPID
    )
);

CREATE TABLE TESTCOMPLAGAINST
(   COMPLAINTID INTEGER
  , TESTVEHVRM CHARACTER (13)
  , VEHTESTCNTR SMALLINT
  , ORGANISATNLOCID INTEGER
  , TESTASSESSDATE DATE
  , TESTASSESSCODE CHARACTER (1)
  , TESTASSESSTEXT CHARACTER (100)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_TESTCOMPLAGAINST PRIMARY KEY (
       COMPLAINTID
     , TESTVEHVRM
     , VEHTESTCNTR
    )
);

CREATE TABLE TESTITEMSELECTOR
(   TSTITMID SMALLINT
  , TESTCLASSID CHARACTER (2)
  , PARENTID SMALLINT
  , TSTITMSETSECID SMALLINT
  , ITEMNAME CHARACTER (100)
  , TSTITMDESCRIPTION CHARACTER (50)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_TESTITEMSELECTOR PRIMARY KEY (
       TSTITMID
     , TESTCLASSID
    )
);

CREATE TABLE TESTREGMESSAGE
(   TESTREGMSGCODE INTEGER
  , TESTREGDESCRIPTION CHARACTER (250)
  , TESTREGTEXT CHARACTER (50)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_TESTREGMESSAGE PRIMARY KEY (
       TESTREGMSGCODE
    )
);

CREATE TABLE TESTVEHEVENT
(   TESTVEHEVNTVRM CHARACTER (13)
  , TESTVEHEVNTCNTR SMALLINT
  , TESTVEHEVENTTYPE CHARACTER (1)
  , TESTVEHEVENTFRDT TIMESTAMP(3)
  , TESTVEHEVNTPERSID INTEGER
  , CERTIFICATENUMBER CHARACTER (10)
  , CERTSTATUSHISTCNTR SMALLINT
  , TESTVEHVRM CHARACTER (13)
  , VEHTESTCNTR SMALLINT
  , TESTVEHDETHISTCNTR SMALLINT
  , SUBNTREASONID INTEGER
  , ORGID INTEGER
  , LOCATIONID INTEGER
  , ORGANISATNLOCID INTEGER
  , MEMBEROFPBLCID INTEGER
  , RSNFORREPLACEMENT CHARACTER (100)
  , DATACHANGED CHARACTER (6)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_TESTVEHEVENT PRIMARY KEY (
       TESTVEHEVNTVRM
     , TESTVEHEVNTCNTR
    )
);

CREATE TABLE TESTVEHEVENTHIST
(   TESTVEHEVNTVRM CHARACTER (13)
  , TESTVEHEVNTCNTR SMALLINT
  , TESTVEHEVENTTYPE CHARACTER (1)
  , TESTVEHEVENTFRDT TIMESTAMP(3)
  , TESTVEHEVNTPERSID INTEGER
  , CERTIFICATENUMBER CHARACTER (10)
  , CERTSTATUSHISTCNTR SMALLINT
  , TESTVEHVRM CHARACTER (13)
  , VEHTESTCNTR SMALLINT
  , TESTVEHDETHISTCNTR SMALLINT
  , SUBNTREASONID INTEGER
  , ORGID INTEGER
  , LOCATIONID INTEGER
  , ORGANISATNLOCID INTEGER
  , MEMBEROFPBLCID INTEGER
  , RSNFORREPLACEMENT CHARACTER (100)
  , DATACHANGED CHARACTER (6)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_TVEHVRMCNTR PRIMARY KEY (
       TESTVEHEVNTVRM
     , TESTVEHEVNTCNTR
    )
);

CREATE TABLE TESTVEHICLEDET
(   TESTVEHDETVRM CHARACTER (13)
  , TESTVEHDETHISTCNTR SMALLINT
  , PRITESTVEHDETVRM CHARACTER (13)
  , PRITESTVEHDETHICNT SMALLINT
  , TESTVEHDETSETFRDT DATE
  , LINKEDPERSONID INTEGER
  , FALLBACKPERSONID INTEGER
  , MOTTSTVHSITNGCPCTY SMALLINT
  , TESTVEHDETFUELTYPE CHARACTER (1)
  , MOTTSTVHCYLCPCTY INTEGER
  , SVAEMISSIONSTD CHARACTER (6)
  , TESTVEHDETSEATBELT SMALLINT
  , LASTSEATBELTCHKDT DATE
  , TESTVEHDETVIN CHARACTER (20)
  , DVLACOLOURCODE CHARACTER (1)
  , DVLACOLOURCODE2 CHARACTER (1)
  , MANUFACTUREDATE DATE
  , FIRSTREGISTRATNDT DATE
  , DECLAREDNEW CHARACTER (1)
  , FIRSTUSEDATE DATE
  , TOTALLOSSMARKER CHARACTER (1)
  , DESIGNGROSSWEIGHT INTEGER
  , TSTVEHDETMAKEDESC CHARACTER (30)
  , TSTVEHDETMODDESC CHARACTER (30)
  , MODELREF CHARACTER (10)
  , SEATBELTTYPEAPPROV CHARACTER (1)
  , MODELTYPE CHARACTER (35)
  , TESTNUMBER DECIMAL (12,0)
  , TSTVEHROOTVRM CHARACTER (13)
  , TSTVEHROOTHISTCNTR SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_TESTVEHICLEDET PRIMARY KEY (
       TESTVEHDETVRM
     , TESTVEHDETHISTCNTR
    )
);

CREATE TABLE TRAINERSESBOOKING
(   COURSECODE CHARACTER (10)
  , EVENTCODE INTEGER
  , SESSIONNUMBER INTEGER
  , PERSONID INTEGER
  , TRNRSESCNCPERSONID INTEGER
  , TRAINERCONFRMPRSNT CHARACTER (1)
  , TRAINERSESSNCNCLDT DATE
  , TRAINERSESSNFRDTTM TIMESTAMP(3)
  , TRAINERSESSNTODTTM TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_TRAINERSESBOOKING PRIMARY KEY (
       COURSECODE
     , EVENTCODE
     , SESSIONNUMBER
     , PERSONID
    )
);

CREATE TABLE TSTITMSETREFREJ
(   RFRID INTEGER
  , TESTCLASSID CHARACTER (2)
  , TSTITMID SMALLINT
  , INSPCTNMANUALREF CHARACTER (10)
  , MINORITEM CHARACTER (1)
  , RFRDESC CHARACTER (250)
  , RFRLOCMARKER CHARACTER (1)
  , RFRQTMARKER CHARACTER (1)
  , RFRNOTE CHARACTER (1)
  , RFRMANUAL CHARACTER (1)
  , RFRSPECPROC CHARACTER (1)
  , RFRINSPMANDESC TEXT
  , TSTITMADVISORYTEXT CHARACTER (250)
  , TSTITMSETSECID SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_TSTITMSETREFREJ PRIMARY KEY (
       RFRID
     , TESTCLASSID
    )
);

CREATE TABLE UNAPPEQUIPTYPE
(   UNAPPEQUIPID INTEGER
  , UNAPPEQUIPDESC CHARACTER (100)
  , UNAPPEQUIPNAME CHARACTER (10)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_UNAPPEQUIPTYPE PRIMARY KEY (
       UNAPPEQUIPID
    )
);

CREATE TABLE VATRATECLASS
(   VATCLASSID CHARACTER (2)
  , VATDESCRIPTION CHARACTER (20)
  , VATEXEMPT CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VATRATECLASS PRIMARY KEY (
       VATCLASSID
    )
);

CREATE TABLE VATRATEVALUE
(   VATRATEID INTEGER
  , VATCLASSID CHARACTER (2)
  , VATPERCENT DECIMAL (7,5)
  , VATRATEFROMDATE DATE
  , VATRATETODATE DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VATRATE PRIMARY KEY (
       VATRATEID
    )
);

CREATE TABLE VEASSESSITEM
(   VETESTVEHVRM CHARACTER (13)
  , VEVEHTESTCNTR SMALLINT
  , NTTESTVEHVRM CHARACTER (13)
  , NTVEHTESTCNTR SMALLINT
  , VEASSESSITEMID SMALLINT
  , RFRTYPE CHARACTER (1)
  , PRINTSEQUENCE SMALLINT
  , VEASSESSNTVEFLAG CHARACTER (1)
  , VEASSESSDEFECTSEV CHARACTER (1)
  , VEASSESSNTERROR CHARACTER (1)
  , VEASSESSDISREGARD CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VEASSESSITEM PRIMARY KEY (
       VETESTVEHVRM
     , VEVEHTESTCNTR
     , NTTESTVEHVRM
     , NTVEHTESTCNTR
     , VEASSESSITEMID
    )
);

CREATE TABLE VEASSESSMENT
(   VETESTVEHVRM CHARACTER (13)
  , VEVEHTESTCNTR SMALLINT
  , NTTESTVEHVRM CHARACTER (13)
  , NTVEHTESTCNTR SMALLINT
  , VEASSESSDATE DATE
  , VEASSESSTYPE CHARACTER (1)
  , VEASSESSOUTCOME CHARACTER (3)
  , VEASSESSSTATUS CHARACTER (1)
  , VEASSESSDELAY INTEGER
  , VEASSESSDELAYUNITS CHARACTER (1)
  , VEASSESSODODIFF INTEGER
  , VEASSESSCANCELDATE DATE
  , UPDATINGPERSONID INTEGER
  , UPDATINGDATETIME TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VEASSESSMENT PRIMARY KEY (
       VETESTVEHVRM
     , VEVEHTESTCNTR
     , NTTESTVEHVRM
     , NTVEHTESTCNTR
    )
);

CREATE TABLE VEHICLE
(   TSTVEHROOTVRM CHARACTER (13)
  , TSTVEHROOTHISTCNTR SMALLINT
  , MILEHISTCOMPFLAG CHARACTER (1)
  , COUNTMILEHIST SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VROOTVRMCNTR PRIMARY KEY (
       TSTVEHROOTVRM
     , TSTVEHROOTHISTCNTR
    )
);

CREATE TABLE VEHICLETESTITEM
(   TESTVEHVRM CHARACTER (13)
  , VEHTESTCNTR SMALLINT
  , PRINTSEQUENCE SMALLINT
  , RFRID INTEGER
  , RFRTYPE CHARACTER (1)
  , LATLOCATIONID CHARACTER (1)
  , LONGLOCATIONID CHARACTER (1)
  , VERTLOCATIONID CHARACTER (1)
  , LOCFREETEXT CHARACTER (100)
  , TESTCLASSID CHARACTER (2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VEHICLETESTITEM PRIMARY KEY (
       TESTVEHVRM
     , VEHTESTCNTR
     , PRINTSEQUENCE
    )
);

CREATE TABLE VEHICLETESTRESULT
(   TESTVEHVRM CHARACTER (13)
  , VEHTESTCNTR SMALLINT
  , TESTNUMBER DECIMAL (12,0)
  , VEHICLETESTTYPE CHARACTER (2)
  , APPEALFLAG CHARACTER (1)
  , PRIORTESTVEHVRM CHARACTER (13)
  , PRIORVEHTESTCNTR SMALLINT
  , TESTVEHDETHISTCNTR SMALLINT
  , VRMDESCRIPTOR CHARACTER (1)
  , VINDESCRIPTOR CHARACTER (1)
  , LOCATIONID INTEGER
  , VEHICLETESTLOC CHARACTER (50)
  , SMARTCARDID01 INTEGER
  , SMARTCARDID02 INTEGER
  , SMARTCARDID03 INTEGER
  , SMARTCARDID04 INTEGER
  , VEHTESTHANDHELDIND CHARACTER (1)
  , INCOVEHID INTEGER
  , VEHICLETESTDATE DATE
  , VEHICLETESTEVENT01 CHARACTER (1)
  , VEHICLETESTEVENT02 CHARACTER (1)
  , VEHICLETESTEVENT03 CHARACTER (1)
  , VEHICLETESTEVENT04 CHARACTER (1)
  , VEHTSTEVENTDTTM01 TIMESTAMP(3)
  , VEHTSTEVENTDTTM02 TIMESTAMP(3)
  , VEHTSTEVENTDTTM03 TIMESTAMP(3)
  , VEHTSTEVENTDTTM04 TIMESTAMP(3)
  , VEHTSTEVENTPERSID01 INTEGER
  , VEHTSTEVENTPERSID02 INTEGER
  , VEHTSTEVENTPERSID03 INTEGER
  , VEHTSTEVENTPERSID04 INTEGER
  , VEHTSTRSLTTOTTMTST INTEGER
  , VEHTSTFLLBCKPERSID01 INTEGER
  , VEHTSTFLLBCKPERSID02 INTEGER
  , VEHTSTFLLBCKPERSID03 INTEGER
  , VEHTSTFLLBCKPERSID04 INTEGER
  , CATCHUPVEHIDENTITY CHARACTER (1)
  , VEHTSTRESLTVSIDECL CHARACTER (1)
  , VEHTSTCATCHUPRSLT CHARACTER (1)
  , VEHTSTCATCHCMNT CHARACTER (100)
  , VEHTSTCHECKPERSID INTEGER
  , VEHTSTCHECKERFRDT DATE
  , VEHTSTRECMILEAGE INTEGER
  , MOTTESTRESULT CHARACTER (3)
  , REFUSALID01 SMALLINT
  , REFUSALID02 SMALLINT
  , REFUSALID03 SMALLINT
  , REFUSALID04 SMALLINT
  , REFUSALID05 SMALLINT
  , REFUSALID06 SMALLINT
  , REFUSALID07 SMALLINT
  , REFUSALID08 SMALLINT
  , REFUSALID09 SMALLINT
  , REFUSALID10 SMALLINT
  , REFUSALID11 SMALLINT
  , REFUSALID12 SMALLINT
  , TESTCLASSID CHARACTER (2)
  , MOTTGVERSIONID INTEGER
  , VEHTESTBRAKEWEIGHT INTEGER
  , VEHTSTBRAKEWTSRC CHARACTER (1)
  , BRAKETSTSYSTYPE CHARACTER (1)
  , BRAKETSTEFFICY1 SMALLINT
  , BRAKETSTEFFICY2 SMALLINT
  , BRAKETSTLOCK1 SMALLINT
  , BRAKETSTLOCK2 SMALLINT
  , BRAKETSTIMB1 SMALLINT
  , BRAKETSTIMB2 SMALLINT
  , EMISSIONTESTTYPE CHARACTER (2)
  , EMISSIONTESTRESULT01 CHARACTER (1)
  , EMISSIONTESTRESULT02 CHARACTER (1)
  , EMISSIONTESTRESULT03 CHARACTER (1)
  , EMISSIONTESTRESULT04 CHARACTER (1)
  , EMISSIONTESTRESULT05 CHARACTER (1)
  , EMISSIONTESTRESULT06 CHARACTER (1)
  , EMISSIONTESTRESULT07 CHARACTER (1)
  , EMISSIONTESTRESULT08 CHARACTER (1)
  , EMISSIONTESTRESULT09 CHARACTER (1)
  , EMISSIONTESTRESULT10 CHARACTER (1)
  , EMISSIONTESTRESULT11 CHARACTER (1)
  , EMISSIONTESTRESULT12 CHARACTER (1)
  , EMISSIONTESTRESULT13 CHARACTER (1)
  , EMISSIONTESTRESULT14 CHARACTER (1)
  , EMISSIONTESTRESULT15 CHARACTER (1)
  , EMISSIONTESTRESULT16 CHARACTER (1)
  , EMISSIONTESTRESULT17 CHARACTER (1)
  , EMISSIONTESTRESULT18 CHARACTER (1)
  , EMISSIONTESTRESULT19 CHARACTER (1)
  , EMISSIONTESTRESULT20 CHARACTER (1)
  , SECFASTIDLE CHARACTER (1)
  , EMISSIONRESULT INTEGER
  , VEHTESTOUTDOCTYPE CHARACTER (1)
  , CERTIFICATENUMBER CHARACTER (10)
  , VEHICLETESTWARNING CHARACTER (150)
  , VEHTSTEXPIRYDT DATE
  , VEHTSTXIIIMTHMARK CHARACTER (1)
  , VEHTSTXIIIMTHRES CHARACTER (100)
  , VEHTSTPERSONID INTEGER
  , COMPLAINTID INTEGER
  , VEHTSTRECMILAGETYP CHARACTER (1)
  , VTESTERRMSGID INTEGER
  , RETESTOFTESTVEHVRM CHARACTER (13)
  , RETESTOFVEHTSTCNTR SMALLINT
  , SCOPEOFINSPECTION CHARACTER (1)
  , PRSINDICATOR CHARACTER (1)
  , ABORTABANDONTEXT CHARACTER (150)
  , EQPLIMSOVRDIDEM INTEGER
  , EQPRSLTOVRDIDEM INTEGER
  , VEHTSTRSLTVALIDIND CHARACTER (1)
  , VEHTESTSUBCLASS CHARACTER (1)
  , TESTVEHDETVRM CHARACTER (13)
  , EMERGINNUMBER CHARACTER (7)
  , RSLTSETDESCCDEM CHARACTER (2)
  , RSLTSETDESCCDBRSRV CHARACTER (2)
  , RSLTSETDESCCDBRPRK CHARACTER (2)
  , RSLTSETDESCCDBRIMB CHARACTER (2)
  , MAXPREVTSTEXPDT DATE
  , ORGANISATNLOCID INTEGER
  , NUMOFMISMATCHES SMALLINT
  , CERTNUMBEROLD CHARACTER (10)
  , VEHTSTCONDITION CHARACTER (1)
  , VEHTSTCONDDTTM TIMESTAMP(3)
  , ETRDATE DATE
  , VEHTSTTESTMODE CHARACTER (2)
  , HHDTYPEAPPROVCODE CHARACTER (6)
  , COMPLNQCINDICATOR CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VEHICLETESTRESULT PRIMARY KEY (
       TESTVEHVRM
     , VEHTESTCNTR
    )
);

CREATE TABLE VEHTESTERRORMESS
(   VTESTERRMSGID INTEGER
  , VTESTERRMSGPREVID INTEGER
  , ORGID INTEGER
  , LOCATIONID INTEGER
  , ORGANISATNLOCID INTEGER
  , RECIPIENTPERSONID INTEGER
  , TESTREGMSGCODE INTEGER
  , TESTREGMSGDATETIME TIMESTAMP(3)
  , VTESTERRMSGENTRVIN CHARACTER (20)
  , VTESTERRMSGENTRVRM CHARACTER (13)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VEHTESTERRORMESS PRIMARY KEY (
       VTESTERRMSGID
    )
);

CREATE TABLE VEHTESTITEMHIST
(   TESTVEHVRM CHARACTER (13)
  , VEHTESTCNTR SMALLINT
  , PRINTSEQUENCE SMALLINT
  , RFRID INTEGER
  , RFRTYPE CHARACTER (1)
  , LATLOCATIONID CHARACTER (1)
  , LONGLOCATIONID CHARACTER (1)
  , VERTLOCATIONID CHARACTER (1)
  , LOCFREETEXT CHARACTER (100)
  , TESTCLASSID CHARACTER (2)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VEHTESTITEMHIST PRIMARY KEY (
       TESTVEHVRM
     , VEHTESTCNTR
     , PRINTSEQUENCE
    )
);

CREATE TABLE VEHTESTRESULTHIST
(   TESTVEHVRM CHARACTER (13)
  , VEHTESTCNTR SMALLINT
  , TESTNUMBER DECIMAL (12,0)
  , VEHICLETESTTYPE CHARACTER (2)
  , APPEALFLAG CHARACTER (1)
  , PRIORTESTVEHVRM CHARACTER (13)
  , PRIORVEHTESTCNTR SMALLINT
  , TESTVEHDETHISTCNTR SMALLINT
  , VRMDESCRIPTOR CHARACTER (1)
  , VINDESCRIPTOR CHARACTER (1)
  , LOCATIONID INTEGER
  , VEHICLETESTLOC CHARACTER (50)
  , SMARTCARDID01 INTEGER
  , SMARTCARDID02 INTEGER
  , SMARTCARDID03 INTEGER
  , SMARTCARDID04 INTEGER
  , INCOVEHID INTEGER
  , VEHICLETESTDATE DATE
  , VEHICLETESTEVENT01 CHARACTER (1)
  , VEHICLETESTEVENT02 CHARACTER (1)
  , VEHICLETESTEVENT03 CHARACTER (1)
  , VEHICLETESTEVENT04 CHARACTER (1)
  , VEHTSTEVENTDTTM01 TIMESTAMP(3)
  , VEHTSTEVENTDTTM02 TIMESTAMP(3)
  , VEHTSTEVENTDTTM03 TIMESTAMP(3)
  , VEHTSTEVENTDTTM04 TIMESTAMP(3)
  , VEHTSTEVENTPERSID01 INTEGER
  , VEHTSTEVENTPERSID02 INTEGER
  , VEHTSTEVENTPERSID03 INTEGER
  , VEHTSTEVENTPERSID04 INTEGER
  , VEHTSTRSLTTOTTMTST INTEGER
  , VEHTSTFLLBCKPERSID01 INTEGER
  , VEHTSTFLLBCKPERSID02 INTEGER
  , VEHTSTFLLBCKPERSID03 INTEGER
  , VEHTSTFLLBCKPERSID04 INTEGER
  , CATCHUPVEHIDENTITY CHARACTER (1)
  , VEHTSTRESLTVSIDECL CHARACTER (1)
  , VEHTSTCATCHUPRSLT CHARACTER (1)
  , VEHTSTCATCHCMNT CHARACTER (100)
  , VEHTSTCHECKPERSID INTEGER
  , VEHTSTCHECKERFRDT DATE
  , VEHTSTRECMILEAGE INTEGER
  , MOTTESTRESULT CHARACTER (3)
  , REFUSALID01 SMALLINT
  , REFUSALID02 SMALLINT
  , REFUSALID03 SMALLINT
  , REFUSALID04 SMALLINT
  , REFUSALID05 SMALLINT
  , REFUSALID06 SMALLINT
  , REFUSALID07 SMALLINT
  , REFUSALID08 SMALLINT
  , REFUSALID09 SMALLINT
  , REFUSALID10 SMALLINT
  , REFUSALID11 SMALLINT
  , REFUSALID12 SMALLINT
  , TESTCLASSID CHARACTER (2)
  , MOTTGVERSIONID INTEGER
  , VEHTESTBRAKEWEIGHT INTEGER
  , VEHTSTBRAKEWTSRC CHARACTER (1)
  , BRAKETSTSYSTYPE CHARACTER (1)
  , BRAKETSTEFFICY1 SMALLINT
  , BRAKETSTEFFICY2 SMALLINT
  , BRAKETSTLOCK1 SMALLINT
  , BRAKETSTLOCK2 SMALLINT
  , BRAKETSTIMB1 SMALLINT
  , BRAKETSTIMB2 SMALLINT
  , EMISSIONTESTTYPE CHARACTER (2)
  , EMISSIONTESTRESULT01 CHARACTER (1)
  , EMISSIONTESTRESULT02 CHARACTER (1)
  , EMISSIONTESTRESULT03 CHARACTER (1)
  , EMISSIONTESTRESULT04 CHARACTER (1)
  , EMISSIONTESTRESULT05 CHARACTER (1)
  , EMISSIONTESTRESULT06 CHARACTER (1)
  , EMISSIONTESTRESULT07 CHARACTER (1)
  , EMISSIONTESTRESULT08 CHARACTER (1)
  , EMISSIONTESTRESULT09 CHARACTER (1)
  , EMISSIONTESTRESULT10 CHARACTER (1)
  , EMISSIONTESTRESULT11 CHARACTER (1)
  , EMISSIONTESTRESULT12 CHARACTER (1)
  , EMISSIONTESTRESULT13 CHARACTER (1)
  , EMISSIONTESTRESULT14 CHARACTER (1)
  , EMISSIONTESTRESULT15 CHARACTER (1)
  , EMISSIONTESTRESULT16 CHARACTER (1)
  , EMISSIONTESTRESULT17 CHARACTER (1)
  , EMISSIONTESTRESULT18 CHARACTER (1)
  , EMISSIONTESTRESULT19 CHARACTER (1)
  , EMISSIONTESTRESULT20 CHARACTER (1)
  , SECFASTIDLE CHARACTER (1)
  , EMISSIONRESULT INTEGER
  , VEHTESTOUTDOCTYPE CHARACTER (1)
  , CERTIFICATENUMBER CHARACTER (10)
  , VEHICLETESTWARNING CHARACTER (150)
  , VEHTSTEXPIRYDT DATE
  , VEHTSTXIIIMTHMARK CHARACTER (1)
  , VEHTSTXIIIMTHRES CHARACTER (100)
  , VEHTSTPERSONID INTEGER
  , COMPLAINTID INTEGER
  , VEHTSTRECMILAGETYP CHARACTER (1)
  , VTESTERRMSGID INTEGER
  , RETESTOFTESTVEHVRM CHARACTER (13)
  , RETESTOFVEHTSTCNTR SMALLINT
  , SCOPEOFINSPECTION CHARACTER (1)
  , PRSINDICATOR CHARACTER (1)
  , ABORTABANDONTEXT CHARACTER (150)
  , EQPLIMSOVRDIDEM INTEGER
  , EQPRSLTOVRDIDEM INTEGER
  , VEHTSTRSLTVALIDIND CHARACTER (1)
  , VEHTESTSUBCLASS CHARACTER (1)
  , TESTVEHDETVRM CHARACTER (13)
  , EMERGINNUMBER CHARACTER (7)
  , RSLTSETDESCCDEM CHARACTER (2)
  , RSLTSETDESCCDBRSRV CHARACTER (2)
  , RSLTSETDESCCDBRPRK CHARACTER (2)
  , RSLTSETDESCCDBRIMB CHARACTER (2)
  , MAXPREVTSTEXPDT DATE
  , ORGANISATNLOCID INTEGER
  , NUMOFMISMATCHES SMALLINT
  , CERTNUMBEROLD CHARACTER (10)
  , VEHTSTCONDITION CHARACTER (1)
  , VEHTSTCONDDTTM TIMESTAMP(3)
  , ETRDATE DATE
  , VEHTSTTESTMODE CHARACTER (2)
  , HHDTYPEAPPROVCODE CHARACTER (6)
  , COMPLNQCINDICATOR CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VTRHTESTVEHVRM PRIMARY KEY (
       TESTVEHVRM
     , VEHTESTCNTR
    )
);

CREATE TABLE VEHTSTNONSTDADV
(   TESTVEHVRM CHARACTER (13)
  , VEHTESTCNTR SMALLINT
  , ADVSRYPRINTSEQ SMALLINT
  , ADVSRYTEXT CHARACTER (250)
  , NSTDADVTYPE CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VEHTSTNONSTDADV PRIMARY KEY (
       TESTVEHVRM
     , VEHTESTCNTR
     , ADVSRYPRINTSEQ
    )
);

CREATE TABLE VTSAECLASSOFVEHSTA
(   ORGANISATNLOCID INTEGER
  , TESTCLASSID CHARACTER (2)
  , VTSAECLASSFROMDATE DATE
  , VTSAECLASSONOFFFLG CHARACTER (1)
  , VTSAECLSUPPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VTSAECLASSOFVEHSTA PRIMARY KEY (
       ORGANISATNLOCID
     , TESTCLASSID
    )
);

CREATE TABLE VTSAESMLSSTRNSFRLN
(   APPREQUESTID INTEGER
  , ORGANISATNLOCID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VTSAESMLSSTRNSFRLN PRIMARY KEY (
       APPREQUESTID
     , ORGANISATNLOCID
    )
);

CREATE TABLE VTSAETRANSFERITEM
(   APPREQUESTID INTEGER
  , ORGANISATNLOCID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VTSAETRANSFERITEM PRIMARY KEY (
       APPREQUESTID
     , ORGANISATNLOCID
    )
);

CREATE TABLE VTSDEVICE
(   LOCATIONID INTEGER
  , LOCATIONTYPE CHARACTER (1)
  , LOCATIONNUMBER CHARACTER (10)
  , VTSDEVICEIPADDR4 SMALLINT
  , UPDATINGPERSID INTEGER
  , VTSDEVICENUMBER SMALLINT
  , CONFIGPACKDWNLD INTEGER
  , CONFIGPACKINST INTEGER
  , DAILYAUTH TIMESTAMP(3)
  , VTSDEVLATSTPRG SMALLINT
  , VTSDEVIDENTNO CHARACTER (10)
  , VTSDEVINSTALLDTTM TIMESTAMP(3)
  , VTSDEVDEINSTDTTM TIMESTAMP(3)
  , CONFIGPACKDWNDT DATE
  , CONFIGPACKINSTDT DATE
  , LPHOSTSYNCDTETME TIMESTAMP(3)
  , LPCLIENTSYNCDTETME TIMESTAMP(3)
  , LPTESTOPENCNT SMALLINT
  , LPTESTOPENDT TIMESTAMP(3)
  , LPTESTAWAITTRACNT SMALLINT
  , LPTESTAWAITTRADT TIMESTAMP(3)
  , LPTESTUPLOADEDCNT SMALLINT
  , LPTESTUPLOADEDDT TIMESTAMP(3)
  , LPTESTGOPENCNT SMALLINT
  , LPTESTGOPENDT TIMESTAMP(3)
  , LPTESTGAWAITTRACNT SMALLINT
  , LPTESTGAWAITTRADT TIMESTAMP(3)
  , LPTESTGUPLOADEDCNT SMALLINT
  , LPTESTGUPLOADEDDT TIMESTAMP(3)
  , LPTESTGUPDATEDT TIMESTAMP(3)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VTSDEVICE PRIMARY KEY (
       LOCATIONTYPE
     , LOCATIONNUMBER
     , VTSDEVICEIPADDR4
    )
);

CREATE TABLE VTSEQUIPMENT
(   LOCATIONID INTEGER
  , EQUIPMENTID INTEGER
  , VTSEQUIPID INTEGER
  , VTSEQUIPSERIALNO CHARACTER (30)
  , VTSEQUIPEXTENDFLAG CHARACTER (1)
  , VTSEQUIPCALIBNOTE CHARACTER (100)
  , VTSEQUIPNEXTCLBDT DATE
  , VTSEQUIPCLBDT DATE
  , VTSEQUIPCLBRECDT DATE
  , VTSEQUIPCLBPERID INTEGER
  , VTSEQUIPSTATUSKEY CHARACTER (2)
  , VTSEQUIPSTATFRDATE DATE
  , VTSEQUIPHSTCNTR SMALLINT
  , UPDATINGPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VTSEQUIPMENT PRIMARY KEY (
       VTSEQUIPID
    )
);

CREATE TABLE VTSEQUIPSTAHIST
(   VTSEQUIPID INTEGER
  , VTSEHISTCNTR SMALLINT
  , VTSEHISTSTATUSKEY CHARACTER (2)
  , VTSEHISTFROMDATE DATE
  , UPDATINGPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VTSEQUIPSTAHIST PRIMARY KEY (
       VTSEQUIPID
     , VTSEHISTCNTR
    )
);

CREATE TABLE VTSPADSTOPREASON
(   ORGANISATNLOCID INTEGER
  , PADSTOPREASONID INTEGER
  , VTSPADSTPRSNFRDATE DATE
  , VTSPADSTPRSNTODATE DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VTSPADSTOPREASON PRIMARY KEY (
       ORGANISATNLOCID
     , PADSTOPREASONID
     , VTSPADSTPRSNFRDATE
    )
);
CREATE TABLE VTSSTATUSHISTORY
(   LOCATIONID INTEGER
  , HSTVTSSTATHISTCNTR SMALLINT
  , HSTVTSSTATRATPERID INTEGER
  , HSTVTSSTATUPDPERID INTEGER
  , HSTVTSSTATFROMDATE DATE
  , HSTVTSSTATUSKEY CHARACTER (2)
  , HSTVTSSTATTODATE DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VTSSTATUSHISTORY PRIMARY KEY (
       LOCATIONID
     , HSTVTSSTATHISTCNTR
    )
);
CREATE TABLE VTSTESTCLASSSTATUS
(   VTSTSTCLSSTID INTEGER
  , CLASSCONDITIONID INTEGER
  , LOCATIONID INTEGER
  , MOTTGVERSIONID INTEGER
  , VTSTSTCLSUPDPERSID INTEGER
  , VTSTSTCLSAUTHDT DATE
  , VTSTSTCLSSTFRDT DATE
  , VTSTSTCLSSTSONFLG CHARACTER (1)
  , VTSTSTCLSSHISTCTR SMALLINT
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VTSTESTCLASSSTATUS PRIMARY KEY (
       LOCATIONID
     , CLASSCONDITIONID
    )
);
CREATE TABLE VTSTESTCLSSTAHIST
(   VTSTSTCLSSTID INTEGER
  , HSTVTSTSTCLSHSTCTR SMALLINT
  , HSTCLSCONDITIONID INTEGER
  , HSTLOCATIONID INTEGER
  , HSTMOTTGVERSIONID INTEGER
  , HSTVTSTSTCLUPPERID INTEGER
  , HSTVTSTSTCLSAUTHDT DATE
  , HSTVTSTSTCLSTAFRDT DATE
  , HSTVTSTSTCLSTATODT DATE
  , HSTVTSTSTCLSTONFLG CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VTSTESTCLSSTAHIST PRIMARY KEY (
       HSTLOCATIONID
     , HSTCLSCONDITIONID
     , HSTVTSTSTCLSHSTCTR
    )
);
CREATE TABLE VTSTOAELINKSTAHIST
(   ORGANISATNLOCID INTEGER
  , HSTVTSAEHISTCNTR SMALLINT
  , HSTVTSAEAPPPRDFRDT DATE
  , HSTVTSAELNKSTSKEY CHARACTER (2)
  , HSTVTSAELNKSTSFRDT DATE
  , HSTVTSAELNKSTSTODT DATE
  , HSTVTSAELNKUPPERID INTEGER
  , LOCATIONID INTEGER
  , ORGID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VTSTOAELINKSTAHIST PRIMARY KEY (
       ORGANISATNLOCID
     , HSTVTSAEHISTCNTR
    )
);
CREATE TABLE VTSUNAPPEQUIP
(   LOCATIONID INTEGER
  , UNAPPEQUIPID INTEGER
  , VTSUNAPPEQPID INTEGER
  , VTSUNAPEQPDESCRIP CHARACTER (100)
  , VTSUNAPEQPSERIALNO CHARACTER (30)
  , VTSUNAPEQPFSTUSEDT DATE
  , VTSUNAPEQPOFSERVDT DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VTSUNAPPEQUIP PRIMARY KEY (
       VTSUNAPPEQPID
    )
);
CREATE TABLE VTSVISIT
(   LOCATIONID INTEGER
  , VISITINGPERSONID INTEGER
  , VTSVISITCNTR SMALLINT
  , VTSVISITDATE DATE
  , VTSVISITOUTCOME CHARACTER (250)
  , VTSVISITPADSCHECKD CHARACTER (1)
  , VTSVISITTYPE CHARACTER (10)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VTSVISIT PRIMARY KEY (
       LOCATIONID
     , VISITINGPERSONID
     , VTSVISITCNTR
    )
);
CREATE TABLE VTSVISITTYPES
(   VTSVISITTYPE CHARACTER (10)
  , VTSVISITTYPEDESC CHARACTER (50)
  , VTSVISITTYPEPLAN CHARACTER (1)
  , VTSVISITTYPEINACTV CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VTSVISITTYPES PRIMARY KEY (
       VTSVISITTYPE
    )
);
CREATE TABLE VTSWEAKNESS
(   VTSWEAKNESSID INTEGER
  , ORGANISATNLOCID INTEGER
  , PERSONID INTEGER
  , TESTVEHVRM CHARACTER (13)
  , VEHTESTCNTR SMALLINT
  , VTSVISITTYPE CHARACTER (10)
  , METASSESSTYPE CHARACTER (1)
  , WEAKNESSID SMALLINT
  , WEAKNESSOBSRVDATE DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VWWEAKNESSID PRIMARY KEY (
       ORGANISATNLOCID
     , VTSWEAKNESSID
    )
);
CREATE TABLE VTSZONELINKHISTORY
(   LOCATIONID INTEGER
  , ZONEID INTEGER
  , HSTVTSZONEHISTCTR SMALLINT
  , HSTVTSZONEUPDPERID INTEGER
  , HSTVTSZONELINKFRDT DATE
  , HSTVTSZONELINKTODT DATE
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_VTSZONELINKHISTORY PRIMARY KEY (
       LOCATIONID
     , ZONEID
     , HSTVTSZONEHISTCTR
    )
);
CREATE TABLE WEAKNESSTYPE
(   WEAKNESSID SMALLINT
  , WEAKNESSTEXT CHARACTER (100)
  , WEAKNESSORDER SMALLINT
  , WEAKNESSACTFLAG CHARACTER (1)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_WTWEAKNESSID PRIMARY KEY (
       WEAKNESSID
    )
);
CREATE TABLE WORKLOCATION
(   LOCATIONID INTEGER
  , PERSONID INTEGER
  , UPDATINGPERSONID INTEGER
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_WORKLOCATION PRIMARY KEY (
       LOCATIONID
     , PERSONID
    )
);
CREATE TABLE ZONES
(   ZONEID INTEGER
  , ZONEDESCRIPTION CHARACTER (200)
  , ZONENAME CHARACTER (20)
  , LOCATIONID INTEGER
  , ZONENAMEC CHARACTER (20)
  , BATCH_NUMBER INTEGER DEFAULT 0 COMMENT 'Used by ETL process only',
  , CONSTRAINT PK_ZONE PRIMARY KEY (
       ZONEID
    )
);


