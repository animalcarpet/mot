/*

Data extraction and manipulation scripts from data.gov.uk

*/

DELIMITER $$

CREATE FUNCTION VIN_REPLACE (v_in VARCHAR(255))
RETURNS VARCHAR(255)
DETERMINISTIC 
BEGIN
 DECLARE v_temp, v_out VARCHAR(255);
 SET v_temp = REPLACE(v_in,'0','Y');
 SET v_temp = REPLACE(v_temp,'1','X');
 SET v_temp = REPLACE(v_temp,'2','W');
 SET v_temp = REPLACE(v_temp,'3','U');
 SET v_temp = REPLACE(v_temp,'4','V');
 SET v_temp = REPLACE(v_temp,'5','T');
 SET v_temp = REPLACE(v_temp,'6','S');
 SET v_temp = REPLACE(v_temp,'7','R');
 SET v_temp = REPLACE(v_temp,'8','P');
 SET v_out = REPLACE(v_temp,'9','N');
 RETURN v_out;
END
$$

DELIMITER ;

INSERT INTO MAKE_MODEL (MAKE, MODEL)
SELECT DISTINCT MAKE, MODEL
FROM TESTRESULT;


INSERT INTO VEHICLE_VTS (VEHICLEID, POSTCODEREGION, SORT_ORDER, REGISTRATION, VIN)
SELECT VEHICLEID, MAX(POSTCODEREGION), RAND(), 
CASE WHEN FIRSTUSEDATE>='2000-01-01' THEN 
   CONCAT(RPAD(REPLACE(POSTCODEREGION,'O','Y'),2,'Z'),
    RIGHT(CASE WHEN MONTH(FIRSTUSEDATE)>6 THEN 
      YEAR(FIRSTUSEDATE)+50 ELSE
      YEAR(FIRSTUSEDATE) 
    END,2),UPPER(VIN_REPLACE(LEFT(MD5(VEHICLEID),3)))) 
ELSE
    CONCAT(RPAD(REPLACE(POSTCODEREGION,'O','Y'),2,'Z'),
     LPAD(VEHICLEID,6,'0'))
END,
CASE WHEN FIRSTUSEDATE>='1970-01-01' THEN 
 UPPER(right(md5(VEHICLEID),20))
ELSE
 UPPER(right(md5(VEHICLEID),6))
END 
FROM TESTRESULT
GROUP BY 1;

INSERT INTO VTS_INFO (SITE_NUMBER, POSTCODEREGION, SORT_ORDER)
SELECT SITE_NUMBER
,TRIM('1' FROM TRIM('2' FROM TRIM('3' FROM TRIM('4' FROM TRIM('5' FROM TRIM('6' FROM TRIM('7' FROM TRIM('8' FROM TRIM('9' FROM TRIM('"' FROM TRIM(LEFT(PostCode,2)))))))))))) base_outcode
,RAND()
FROM MOT_VTS_SITE 
;

UPDATE VEHICLE_VTS vv
SET VTS_SITE_NUMBER = (SELECT SITE_NUMBER FROM VTS_INFO vi WHERE vi.POSTCODEREGION = vv.POSTCODEREGION AND SORT_ORDER>=RAND() ORDER BY SORT_ORDER LIMIT 0,1);

UPDATE USERS
SET USERNAME=UPPER(CONCAT(LEFT(SURNAME,7),LEFT(FIRSTNAME,1),REVERSE(LPAD(ID,4,'0'))))
;

INSERT INTO VTS_USER ( SITE_NUMBER, USERNAME, SORT_ORDER) SELECT 'REPLACE',USERNAME, RAND() FROM USERS u;

UPDATE VTS_USER vu SET SITE_NUMBER = (SELECT SITE_NUMBER FROM VTS_INFO vi WHERE vu.SORT_ORDER<=vi.SORT_ORDER ORDER BY SORT_ORDER LIMIT 1) WHERE SITE_NUMBER='REPLACE';

-- May have to manually deal with rare postcoderegions such as WC or errors such as MM
UPDATE mot_test.VTS_INFO SET POSTCODEREGION='EC' WHERE POSTCODEREGION='WC';
UPDATE mot_test.VTS_INFO SET POSTCODEREGION='M' WHERE POSTCODEREGION='MM';

-- UPDATE VTS_USER vu SET SITE_NUMBER = (SELECT SITE_NUMBER FROM VTS_INFO vi WHERE vu.SORT_ORDER>vi.SORT_ORDER ORDER BY SORT_ORDER DESC LIMIT 1) WHERE SITE_NUMBER='REPLACE';

 
-- UPDATE VEHICLE_VTS vv
-- SET NOMINATED_TESTER = (SELECT MAX(USERNAME) FROM VTS_USER vu WHERE vu.SITE_NUMBER=vv.VTS_SITE_NUMBER AND vv.SORT_ORDER>=vu.SORT_ORDER ORDER BY SORT_ORDER LIMIT 0,1);

UPDATE VEHICLE_VTS vv
SET NOMINATED_TESTER = (SELECT MAX(USERNAME) FROM VTS_USER vu WHERE vu.SITE_NUMBER=vv.VTS_SITE_NUMBER AND vv.SORT_ORDER>=vu.SORT_ORDER);

UPDATE VEHICLE_VTS vv
SET NOMINATED_TESTER = (SELECT MAX(USERNAME) FROM VTS_USER vu WHERE vu.SITE_NUMBER=vv.VTS_SITE_NUMBER AND vv.SORT_ORDER<vu.SORT_ORDER) 
WHERE NOMINATED_TESTER IS NULL;

UPDATE VEHICLE_VTS vv 
SET NOMINATED_TESTER = (SELECT MAX(USERNAME)  FROM VTS_USER vu  
JOIN VTS_INFO vi1 ON vu.SITE_NUMBER=vi1.SITE_NUMBER  
JOIN VTS_INFO vi2  ON vi1.POSTCODEREGION = vi2.POSTCODEREGION  
WHERE vi2.SITE_NUMBER=vv.VTS_SITE_NUMBER  AND vv.SORT_ORDER<vu.SORT_ORDER)  
WHERE NOMINATED_TESTER IS NULL;

/*
SELECT VRN, COUNT(*) FROM (
SELECT DISTINCT VEHICLEID, 
CASE WHEN FIRSTUSEDATE>='2000-01-01' THEN 
   CONCAT(RPAD(REPLACE(POSTCODEREGION,'O','Y'),2,'Z'),
    RIGHT(CASE WHEN MONTH(FIRSTUSEDATE)>6 THEN 
      YEAR(FIRSTUSEDATE)+50 ELSE
      YEAR(FIRSTUSEDATE) 
    END,2)) ELSE
    CONCAT(RPAD(REPLACE(POSTCODEREGION,'O','Y'),2,'Z'),
     LPAD(VEHICLEID,6,'0'))
END) VRN
from TESTRESULT ) vrn_gen
GROUP BY 1
HAVING COUNT(*)>1
;

UPDATE VEHICLE_VTS vv, TESTRESULT tr
SET REGISTRATION = CONCAT(RPAD(REPLACE(vv.POSTCODEREGION,'O','Y'),2,'Z'),
   RIGHT(CASE WHEN MONTH(tr.FIRSTUSEDATE)>6 THEN 
      YEAR(tr.FIRSTUSEDATE)+50 ELSE
      YEAR(tr.FIRSTUSEDATE) 
   END,2),
   VIN_REPLACE(UPPER(LEFT(MD5(vv.VEHICLEID),3))))
WHERE tr.FIRSTUSEDATE>='2000-01-01'
AND tr.VEHICLEID = vv.VEHICLEID
;

*/
