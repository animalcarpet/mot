<?xml version="1.0" encoding="UTF-8"?>

<project name="mot-api" default="dist" basedir=".">

    <!-- ============================================  -->
    <!-- ****** Set Component Value  !                 -->
    <!-- ============================================  -->
    
    <property name="component" value="mot-api"/>
    <property environment="env"/>
    <property name="releasedir" value="../release" />
    <property name="builddir" value="${releasedir}/${component}" />
    <property name="apiDir" value="${basedir}/mot-api" />
    <property name="commonDir" value="${basedir}/mot-web-common-module" />
    <property name="frontendDir" value="${basedir}/mot-web-frontend" />

    <!-- ============================================  -->
    <!-- Target: prepare                               -->
    <!-- ============================================  -->
    
    <target name="prepare">
        <echo message="Making directory ${builddir}" />
        <mkdir dir="${builddir}" />

        <echo message="Making Directory ${builddir}/config"/>
        <mkdir dir="${builddir}/config"/>

        <echo message="Making Directory ${builddir}/module"/>
        <mkdir dir="${builddir}/module"/>

        <echo message="Making Directory ${builddir}/src"/>
        <mkdir dir="${builddir}/src"/>

        <echo message="Making Directory ${builddir}/public"/>
        <mkdir dir="${builddir}/public"/>
        
        <echo message="Making Directory ${builddir}/vendor"/>
        <mkdir dir="${builddir}/vendor"/>

        <echo message="Making Directory ${builddir}/data"/>
        <mkdir dir="${builddir}/data"/>

        <echo message="Making Directory ${builddir}/bin"/>
        <mkdir dir="${builddir}/bin"/>
    </target>

    
    
    <!-- ============================================  -->
    <!-- Target: build                                 -->
    <!-- ============================================  -->
    <target name="build" depends="prepare">
        <echo message="Copying files to build directory..." />
        
        <fileset dir="." id="init">
            <include name="init_autoloader.php" />
        </fileset>
        
        <fileset dir="config" id="config">
            <include name="application.config.php" />
            <include name="appname.txt" />
            <include name="modules.list" />
            <include name="static/*.php"/>
            <!-- may need to also include some items from config/autoload/ -->
        </fileset>
        
        <fileset dir="module" id="module">
            <include name="**/*.php" />
            <include name="**/*.phtml" />
            <exclude name="**/test/" />
        </fileset>

        <fileset dir="src" id="src">
            <include name="**/*.php"/>
            <exclude name="**/test/"/>
        </fileset>
        
        <fileset dir="public" id="public">
            <include name="**" />
            <exclude name="**/test/"/>
        </fileset>
        
        <fileset dir="vendor" id="vendor">
            <include name="**"/>
            <exclude name="**/test/"/>
            <exclude name="**/dvsa/scripts/" />
        </fileset>

        <fileset dir="data" id="data">
            <include name="**/*.php"/>
            <exclude name="**/test/"/>
        </fileset>

        <fileset dir="bin" id="bin">
            <include name="**/*.sh"/>
            <exclude name="**/test/"/>
        </fileset>

        <echo message="Copying files from . to ${builddir}/ ..." />
        <copy todir="${builddir}">
            <fileset refid="init"/>
        </copy>

        <echo message="Copying files from config/ to ${builddir}/config/ ..." />
        <copy todir="${builddir}/config">
            <fileset refid="config"/>
        </copy>

        <!-- 
          It may be preferable to simply rename zfc_rbac.global.php.dist to zfc_rbac.global.php in the source tree.
          It seems that this is a prerequisite for a working system and there's no case where the contents of
          the zfc_rbac.global.php would deviate from the zfc_rbac.global.php.dist.
          
          Here in the build.xml, we'd just update the 'config' fileset to include the autoload directory,
          and exclude files with names ending in .dist.

          Check what the implications of doing this would be - this may be an incorrect assumption, also other 
          deploy scripts may need updating.

        <echo message="Copying files from config/autoload/ to ${builddir}/config/autoload/ ..." />
        <copy file="config/autoload/zfc_rbac.global.php.dist" tofile="${builddir}/config/autoload/zfc_rbac.global.php" />
 -->
        <echo message="Copying .php files from module/ to ${builddir}/module/ ..." />
        <copy todir="${builddir}/module">
            <fileset refid="module"/>
        </copy>

        <echo message="Copying all files from public/ to ${builddir}/public/ ..." />
        <copy todir="${builddir}/public">
            <fileset refid="public"/>
        </copy>

        <echo message="Copying .php files from src/ to ${builddir}/src/ ..." />
        <copy todir="${builddir}/src">
            <fileset refid="src"/>
        </copy>

        <echo message="Copying .php files from vendor/ to ${builddir}/vendor/ ..." />
        <copy todir="${builddir}/vendor">
            <fileset refid="vendor"/>
        </copy>

        <echo message="Copying .php files from data/ to ${builddir}/data/ ..." />
        <copy todir="${builddir}/data">
            <fileset refid="data"/>
        </copy>

        <echo message="Copying .sh files from bin/ to ${builddir}/bin/ ..." />
        <copy todir="${builddir}/bin">
            <fileset refid="bin"/>
        </copy>
    </target>
    
    <!-- ============================================  -->
    <!-- (DEFAULT)  Target: dist                       --> 
    <!-- ============================================  -->
    <target name="dist" depends="build">
        <echo message="Creating archive..." />

        <!-- File name Appname-ComponentName-Version-Date.tar.gz -->
        <tar 
          destfile="${releasedir}/${component}-${env.releaseVersion}-${env.BUILD_ID}.tar.gz"
          compression="gzip"
          longfile="gnu">
            <tarfileset dir="${builddir}" prefix="${component}">
                <include name="**" />
                <exclude name="*.tar.gz"/>
            </tarfileset>
        </tar>

        <echo message="Files copied and compressed in build directory OK!" />            
    </target>

    <!-- ============================================  -->
    <!-- (DEFAULT)  Target: clean                      --> 
    <!-- ============================================  -->    
        
    <target name="clean-init" description="clean up" > <!--depends="dist"-->
        <echo message="Cleaning up Files"/>
        <delete dir="${builddir}" />
    </target>   

    <target name="clean" depends="clean-init"/>
    
    
    <!-- ============================================  -->
    <!-- Target: release                               --> 
    <!-- ============================================  -->    
    
    <target name="release" depends="dist,clean"/>

</project>
