-- ------------------------------------------------ --
-- SYSTEM SCRIPT: CREATE AUDIT TRIGGERS FOR A TABLE --
-- ------------------------------------------------ --

SET SESSION group_concat_max_len = 9999999999;                                   

SET @SOURCE_SCHEMA='#SCHEMA#';
SET @TAB_NAME='#TABLENAME#';




SELECT CONCAT('-- Create before triggers for ', TABLE_NAME,'
',drop_tr_bi,';

',create_tr_bi,'

',drop_tr_bu,';

',create_tr_bu,'

') cmd
FROM (
SELECT TABLE_NAME, 
CONCAT('DROP TRIGGER IF EXISTS ', '`tr_', TABLE_NAME, '_bi`') AS drop_tr_bi,
CONCAT('DELIMITER $$
CREATE TRIGGER `tr_',LEFT(TABLE_NAME,58),'_bi` BEFORE INSERT 
ON `', TABLE_NAME, '` FOR EACH ROW 
BEGIN
  SET NEW.`version` = 1, NEW.`created_by` = @app_user_id, NEW.`last_modified_by` = @app_user_id;
END;
$$','
','DELIMITER ;') AS create_tr_bi,

CONCAT('DROP TRIGGER IF EXISTS ', '`tr_', TABLE_NAME, '_bu`') AS drop_tr_bu,
CONCAT('DELIMITER $$
CREATE TRIGGER `tr_',LEFT(TABLE_NAME,58),'_bu` BEFORE UPDATE 
ON `', TABLE_NAME, '` FOR EACH ROW 
BEGIN
  SET NEW.`version` = OLD.`version` + 1, NEW.`last_modified_by` = @app_user_id;
END;
$$','
','DELIMITER ;') AS create_tr_bu

FROM information_schema.COLUMNS 
WHERE TABLE_SCHEMA = @SOURCE_SCHEMA
AND TABLE_NAME = @TAB_NAME
GROUP BY TABLE_NAME ) tmp_table;



--
-- note: after update trigger needs to deal with cases when multiple records are found to expire
--

SELECT CONCAT('-- Create after triggers for ',TABLE_NAME,'
',drop_tr_ai,';

',create_tr_ai,'

',drop_tr_au,';

',create_tr_au,'

',drop_tr_ad,';

',create_tr_ad,'

') cmd
FROM (
SELECT TABLE_NAME, 
CONCAT('DROP TRIGGER IF EXISTS ', '`tr_', TABLE_NAME, '_ai`') AS drop_tr_ai,
CONCAT('DELIMITER $$
CREATE TRIGGER `tr_',LEFT(TABLE_NAME,58),'_ai` AFTER INSERT 
ON `', TABLE_NAME, '` FOR EACH ROW 

BEGIN
INSERT INTO `',LEFT(TABLE_NAME,59),'_hist` 
(`',GROUP_CONCAT(COLUMN_NAME SEPARATOR '`,
`'),'`) 
VALUES (NEW.`',GROUP_CONCAT(COLUMN_NAME SEPARATOR '`,
NEW.`'),'`);
END;
$$','
','DELIMITER ;') AS create_tr_ai,

CONCAT('DROP TRIGGER IF EXISTS ', '`tr_', TABLE_NAME, '_au`') AS drop_tr_au,
CONCAT('DELIMITER $$
CREATE TRIGGER `tr_',LEFT(TABLE_NAME,58),'_au` AFTER UPDATE 
ON `', TABLE_NAME, '` FOR EACH ROW 

BEGIN
UPDATE `', LEFT(TABLE_NAME,59),'_hist` 
SET `expired_by` = @app_user_id,
`expired_on` = current_timestamp(6)
WHERE `id` = OLD.`id` and `expired_on` is null; 

INSERT INTO `',LEFT(TABLE_NAME,59),'_hist` 
(`',GROUP_CONCAT(COLUMN_NAME SEPARATOR '`,
`'),'`) 
VALUES (NEW.`',GROUP_CONCAT(COLUMN_NAME SEPARATOR '`,
NEW.`'),'`);
END;
$$','
','DELIMITER ;') AS create_tr_au,

CONCAT('DROP TRIGGER IF EXISTS ', '`tr_', TABLE_NAME, '_ad`') AS drop_tr_ad,
CONCAT('DELIMITER $$
CREATE TRIGGER `tr_',LEFT(TABLE_NAME,58),'_ad` AFTER DELETE 
ON `', TABLE_NAME, '` FOR EACH ROW 

BEGIN
  UPDATE `', LEFT(TABLE_NAME,59),'_hist` 
  SET `expired_by` = @app_user_id,
  `expired_on` = current_timestamp(6)
  WHERE `id` = OLD.`id` and `expired_on` is null;
END;
$$','
','DELIMITER ;') AS create_tr_ad 

FROM information_schema.COLUMNS 
WHERE TABLE_SCHEMA = @SOURCE_SCHEMA
AND TABLE_NAME = @TAB_NAME
GROUP BY TABLE_NAME ) tmp_table;


